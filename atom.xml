<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sam&#39;s Notes | Sam Blog</title>
  
  <subtitle>梦想还是要有的，万一实现了呢</subtitle>
  <link href="http://giveme5.cc/atom.xml" rel="self"/>
  
  <link href="http://giveme5.cc/"/>
  <updated>2022-12-08T03:19:48.000Z</updated>
  <id>http://giveme5.cc/</id>
  
  <author>
    <name>sam chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>canal 同步 mysql 到 oracle</title>
    <link href="http://giveme5.cc/2022/07/15/canal/canal/"/>
    <id>http://giveme5.cc/2022/07/15/canal/canal/</id>
    <published>2022-07-15T10:02:02.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>canal [kə’næl]，译意为水道&#x2F;管道&#x2F;沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费.</p><p>版本：<br><code>canal</code> 1.1.6<br><code>MySQL</code> 8.0 +<br><code>oracle</code> </p><p><em>更新历史</em><br>无</p><hr><span id="more"></span><p>canal 同步 mysql 到 oracle<br>主要步骤</p><ul><li>mysql 配置 binlog</li><li>canal.deployer</li><li>canal.adapter</li></ul><h2 id="mysql-配置-binlog"><a href="#mysql-配置-binlog" class="headerlink" title="mysql 配置 binlog"></a>mysql 配置 binlog</h2><ul><li><p>开启 Binlog 写入功能，配置 binlog-format 为 ROW 模式，my.cnf 中配置如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin <span class="comment"># 开启 binlog</span></span><br><span class="line">binlog-format=ROW <span class="comment"># 选择 ROW 模式</span></span><br><span class="line">server_id=1 <span class="comment"># 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span></span><br></pre></td></tr></table></figure><p>执行成功可登陆MySQL中查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%log_format%&#x27;;</span><br><span class="line">show variables like &#x27;%log_bin%&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>授权 canal 链接 MySQL 账号具有作为 MySQL slave 的权限, 如果已有账户可直接 grant</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER canal IDENTIFIED BY <span class="string">&#x27;canal&#x27;</span>;  </span><br><span class="line">GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO <span class="string">&#x27;canal&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">-- GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;canal&#x27;</span>@<span class="string">&#x27;%&#x27;</span> ;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ul><h2 id="canal-deployer"><a href="#canal-deployer" class="headerlink" title="canal.deployer"></a>canal.deployer</h2><p>将 canal.deployer的压缩包安装到 <code>/data/canal/canal.deployer/</code> 目录下，<br>主要配置 <code>conf/canal.properties</code><br><code>conf/example/instance.properties</code></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li><p><code>conf/canal.properties</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># ----------- canal服务id，目前没有实际意义</span></span><br><span class="line">canal.id = 11   </span><br><span class="line"><span class="comment">#canal服务socket监听端口，代码中连接canal-server时，使用此段口连接</span></span><br><span class="line">canal.port = 11111</span><br><span class="line">canal.metrics.pull.port = 11112</span><br><span class="line"><span class="comment"># ----------- zookeeper服务地址端口</span></span><br><span class="line">canal.zkServers =192.168.153.6:12181 </span><br><span class="line"><span class="comment">#表示实例的配置文件instance.properties地址， adapter里一致</span></span><br><span class="line">canal.destinations = example</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><code>conf/example/instance.properties</code><br>xx都需要根据实际替换</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  ----------- 监听的数据库地址  修改成自己的</span></span><br><span class="line">canal.instance.master.address=xx.xx.xx.xx:3306</span><br><span class="line">canal.instance.master.journal.name=</span><br><span class="line">canal.instance.master.position=</span><br><span class="line">canal.instance.master.timestamp=</span><br><span class="line">canal.instance.master.gtid=</span><br><span class="line"></span><br><span class="line"><span class="comment"># rds oss binlog</span></span><br><span class="line">canal.instance.rds.accesskey=</span><br><span class="line">canal.instance.rds.secretkey=</span><br><span class="line">canal.instance.rds.instanceId=</span><br><span class="line"></span><br><span class="line"><span class="comment"># table meta tsdb info</span></span><br><span class="line">canal.instance.tsdb.enable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb</span></span><br><span class="line"><span class="comment">#canal.instance.tsdb.dbUsername=canal</span></span><br><span class="line"><span class="comment">#canal.instance.tsdb.dbPassword=canal</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#canal.instance.standby.address =</span></span><br><span class="line"><span class="comment">#canal.instance.standby.journal.name =</span></span><br><span class="line"><span class="comment">#canal.instance.standby.position =</span></span><br><span class="line"><span class="comment">#canal.instance.standby.timestamp =</span></span><br><span class="line"><span class="comment">#canal.instance.standby.gtid=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># username/password</span></span><br><span class="line"><span class="comment">#  ----------- 监听的数据库账号密码 第一步 mysql中增加的 MySQL slave 权限的账户</span></span><br><span class="line">canal.instance.dbUsername=canalxx</span><br><span class="line">canal.instance.dbPassword=canalxxxxxx</span><br><span class="line">canal.instance.connectionCharset = UTF-8</span><br><span class="line"><span class="comment"># enable druid Decrypt database password</span></span><br><span class="line">canal.instance.enableDruid=<span class="literal">false</span></span><br><span class="line"><span class="comment">#canal.instance.pwdPublicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALK4BUxdDltRRE5/zXpVEVPUgunvscYFtEip3pmLlhrWpacX7y7GCMo2/JM6LeHmiiNdH1FWgGCpUfircSwlWKUCAwEAAQ==</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># table regex</span></span><br><span class="line"><span class="comment">#canal.instance.filter.regex=.*\\..*   1.1.6 直接用这个配置会出现异常： Table &#x27;xxxxx.BASE TABLE&#x27; doesn&#x27;t exist, sqlState=42S02 ------------------ 可 改成 canal.instance.filter.regex=.\..</span></span><br><span class="line"><span class="comment"># 1) ----------- 配置监听的数据库 数据表  监听几个 配置几个 </span></span><br><span class="line"><span class="comment"># canal.instance.filter.regex=xx.t_test1xx,xx2.te</span></span><br><span class="line"><span class="comment"># 2) -----------或者可以加上自己指定的数据库, dbname 替换成实际数据库</span></span><br><span class="line">canal.instance.filter.regex=dbname\\..*</span><br><span class="line"></span><br><span class="line"><span class="comment"># table black regex</span></span><br><span class="line">canal.instance.filter.black.regex=mysql\\.slave_.*</span><br><span class="line"></span><br><span class="line"><span class="comment"># mq config</span></span><br><span class="line"><span class="comment"># 配置消息主题</span></span><br><span class="line">canal.mq.topic=example</span><br></pre></td></tr></table></figure></li><li><p>清理<br>修改配置后， 注意清除 <code>/conf/example</code>目录下 <code>meta.bat</code></p></li></ul><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>启动 <code>sh bin/startup.sh</code><br>关闭 <code>sh bin/stop.sh</code><br>重启 <code>sh bin/restartup.sh</code></p><p>启动成功后，类似如下日志<br><code>logs/canal/canal.log</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[main] INFO  com.alibaba.otter.canal.deployer.CanalStarter - <span class="comment">## start the canal server.</span></span><br><span class="line">[main] INFO  com.alibaba.otter.canal.deployer.CanalController - <span class="comment">## start the canal server[192.168.153.4(192.168.153.4):11111]</span></span><br><span class="line">[main] INFO  com.alibaba.otter.canal.deployer.CanalStarter - <span class="comment">## the canal server is running now ......</span></span><br></pre></td></tr></table></figure><p><code>logs/example/example.log</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[main] INFO  c.a.otter.canal.instance.spring.CanalInstanceWithSpring - start CannalInstance <span class="keyword">for</span> 1-example</span><br><span class="line">[main] WARN  c.a.o.canal.parse.inbound.mysql.dbsync.LogEventConvert - --&gt; init table filter : ^rdp.rcp_collect_result_data$|^rdp.rcp_collect_data$</span><br><span class="line">[main] WARN  c.a.o.canal.parse.inbound.mysql.dbsync.LogEventConvert - --&gt; init table black filter : ^mysql\.slave_.*$</span><br><span class="line">[main] INFO  c.a.otter.canal.instance.core.AbstractCanalInstance - start successful....</span><br><span class="line">[destination = example , address = /xx.xx.xx.xx:3306 , EventParser] WARN  c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - ---&gt; begin to find start position, it will be long time <span class="keyword">for</span> reset or first position</span><br><span class="line">[destination = example , address = /xx.xx.xx.xx:3306 , EventParser] WARN  c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - prepare to find start position just show master status</span><br><span class="line">[destination = example , address = /xx.xx.xx.xx:3306 , EventParser] WARN  c.a.o.c.p.inbound.mysql.rds.RdsBinlogEventParserProxy - ---&gt; find start position successfully, EntryPosition[included=<span class="literal">false</span>,journalName=binlog.001094,position=13581,serverId=800,gtid=,timestamp=1658301624000] cost : 3789ms , the next step is binlog dump</span><br></pre></td></tr></table></figure><h2 id="canal-adapter"><a href="#canal-adapter" class="headerlink" title="canal.adapter"></a>canal.adapter</h2><p>将 canal.adapter 的压缩包安装到 <code>/data/canal/canal.adapter/</code> 目录下，<br>主要配置 <code>conf/application.yml</code><br><code>conf/rdb</code> 添加对应的数据表配置</p><p>如果不使用远程配置， 把 <code>conf/bootstrap.yml</code> 全体注掉</p><h3 id="适配器配置"><a href="#适配器配置" class="headerlink" title="适配器配置"></a>适配器配置</h3><p>总配置文件 <code>conf/application.yml</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --- 服务器端口 ， 不要和其它服务冲突</span></span><br><span class="line">server:</span><br><span class="line">  port: 88081</span><br><span class="line"></span><br><span class="line">canal.conf:</span><br><span class="line">  mode: tcp <span class="comment">#tcp kafka rocketMQ rabbitMQ</span></span><br><span class="line">  flatMessage: <span class="literal">true</span>      <span class="comment"># 扁平message开关, 是否以json字符串形式投递数据, 仅在kafka/rocketMQ模式下有效</span></span><br><span class="line">  zookeeperHosts:        <span class="comment"># 对应集群模式下的zk地址, 如果配置了canalServerHost, 则以canalServerHost为准</span></span><br><span class="line">  syncBatchSize: 1000    <span class="comment"># 每次同步的批数量</span></span><br><span class="line">  retries: -1            <span class="comment"># 重试次数, -1为无限重试</span></span><br><span class="line">  <span class="built_in">timeout</span>:               <span class="comment"># 同步超时时间, 单位毫秒</span></span><br><span class="line">  accessKey:</span><br><span class="line">  secretKey:</span><br><span class="line">  consumerProperties:</span><br><span class="line">    <span class="comment"># canal tcp consumer</span></span><br><span class="line">    canal.tcp.server.host: 127.0.0.1:11111            <span class="comment"># -------- 对应单机模式下的canal server的ip:port</span></span><br><span class="line">    canal.tcp.zookeeper.hosts:192.168.153.6:12181     <span class="comment"># -------- 对应集群模式下的zk地址, 如果配置了canalServerHost, 则以canalServerHost为准</span></span><br><span class="line">    canal.tcp.batch.size: 500</span><br><span class="line">    canal.tcp.username:</span><br><span class="line">    canal.tcp.password:</span><br><span class="line">    <span class="comment"># kafka consumer</span></span><br><span class="line">    kafka.bootstrap.servers: 127.0.0.1:9092</span><br><span class="line">    kafka.enable.auto.commit: <span class="literal">false</span></span><br><span class="line">    kafka.auto.commit.interval.ms: 1000</span><br><span class="line">    kafka.auto.offset.reset: latest</span><br><span class="line">    kafka.request.timeout.ms: 40000</span><br><span class="line">    kafka.session.timeout.ms: 30000</span><br><span class="line">    kafka.isolation.level: read_committed</span><br><span class="line">    kafka.max.poll.records: 1000</span><br><span class="line">    <span class="comment"># rocketMQ consumer</span></span><br><span class="line">    rocketmq.namespace:</span><br><span class="line">    rocketmq.namesrv.addr: 127.0.0.1:9876</span><br><span class="line">    rocketmq.batch.size: 1000</span><br><span class="line">    rocketmq.enable.message.trace: <span class="literal">false</span></span><br><span class="line">    rocketmq.customized.trace.topic:</span><br><span class="line">    rocketmq.access.channel:</span><br><span class="line">    rocketmq.subscribe.filter:</span><br><span class="line">    <span class="comment"># rabbitMQ consumer</span></span><br><span class="line">    rabbitmq.host:</span><br><span class="line">    rabbitmq.virtual.host:</span><br><span class="line">    rabbitmq.username:</span><br><span class="line">    rabbitmq.password:</span><br><span class="line">    rabbitmq.resource.ownerId:</span><br><span class="line"></span><br><span class="line">  srcDataSources:  <span class="comment"># 源数据库</span></span><br><span class="line">    defaultDS:     <span class="comment"># 自定义名称， 必须和 out adapter 里 dataSourceKey 一致</span></span><br><span class="line">      url: jdbc:mysql://192.168.xx.xx:3306/touch-test?useUnicode=<span class="literal">true</span> <span class="comment"># jdbc url </span></span><br><span class="line">      username: rootxx                                                 <span class="comment"># jdbc 账号</span></span><br><span class="line">      password: 123xx                                                  <span class="comment"># jdbc 密码</span></span><br><span class="line">                                       </span><br><span class="line">  canalAdapters:                            <span class="comment"># 适配器列表</span></span><br><span class="line">  - instance: example                       <span class="comment"># canal 实例名或者 MQ topic 名</span></span><br><span class="line">    <span class="built_in">groups</span>:                                 <span class="comment"># 分组列表</span></span><br><span class="line">    - groupId: g1                           <span class="comment"># 分组id, 如果是MQ模式将用到该值</span></span><br><span class="line">      outerAdapters:                        <span class="comment"># 分组内适配器列表</span></span><br><span class="line">      - name: logger                        <span class="comment"># 日志打印适配器</span></span><br><span class="line">      - name: rdb                           <span class="comment"># conf/rdb 目录下 outerAdapterKey 对应</span></span><br><span class="line">        key: oracle1</span><br><span class="line">        properties:</span><br><span class="line">          jdbc.driverClassName: oracle.jdbc.OracleDriver</span><br><span class="line">          jdbc.url: jdbc:oracle:thin:@192.168.5.xx:1521:orcl1</span><br><span class="line">          jdbc.username: xxx</span><br><span class="line">          jdbc.password: 123456xx</span><br><span class="line">      - name: rdb</span><br><span class="line">        key: oracle2</span><br><span class="line">        properties:</span><br><span class="line">          jdbc.driverClassName: oracle.jdbc.OracleDriver</span><br><span class="line">          jdbc.url: jdbc:oracle:thin:@192.168.5.xxx:1521:orcl1</span><br><span class="line">          jdbc.username: xxxx</span><br><span class="line">          jdbc.password: 123xx456  </span><br></pre></td></tr></table></figure><h3 id="适配器列表"><a href="#适配器列表" class="headerlink" title="适配器列表"></a>适配器列表</h3><h4 id="logger适配器"><a href="#logger适配器" class="headerlink" title="logger适配器"></a>logger适配器</h4><p>最简单的处理, 将受到的变更事件通过日志打印的方式进行输出, 如配置所示, 只需要定义name: logger即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">outerAdapters:                        </span><br><span class="line">- name: logger </span><br></pre></td></tr></table></figure><h4 id="rdb-输出-关系型数据库"><a href="#rdb-输出-关系型数据库" class="headerlink" title="rdb 输出 关系型数据库"></a>rdb 输出 关系型数据库</h4><p>目前内置支持的数据库列表:<br>MySQL<br>Oracle<br>PostgresSQL<br>SQLServer</p><p>理论上jdbc的数据库都可以。</p><h5 id="RDB表映射文件"><a href="#RDB表映射文件" class="headerlink" title="RDB表映射文件"></a>RDB表映射文件</h5><p><code>conf/rdb</code>目录下， 对应上面的 key： oracle1， oracle2</p><ul><li><p><code>test_oracle1</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">dataSourceKey: defaultDS  <span class="comment"># 源数据源的key, 对应上面配置的srcDataSources中的值</span></span><br><span class="line">destination: example      <span class="comment"># cannal的instance或者MQ的topic</span></span><br><span class="line">groupId: g1               <span class="comment"># 对应MQ模式下的groupId, 只会同步对应groupId的数据</span></span><br><span class="line">outerAdapterKey: oracle1  <span class="comment"># adapter key, 对应上面配置outAdapters中的key</span></span><br><span class="line">concurrent: <span class="literal">true</span>          <span class="comment"># 是否按主键hash并行同步, 并行同步的表必须保证主键不会更改及主键不能为其他同步表的外键!!</span></span><br><span class="line">dbMapping:                </span><br><span class="line">  database: touch-test    <span class="comment"># 源数据源的database/shcema</span></span><br><span class="line">  table: t_auth_perm_m    <span class="comment"># 源数据源表名</span></span><br><span class="line">  targetTable: covid.t_auth_perm_m <span class="comment"># 目标数据源的库名.表名</span></span><br><span class="line">  targetPk:               <span class="comment"># 主键映射</span></span><br><span class="line">    xx_id: xx_id          <span class="comment"># 如果是复合主键可以换行映射多个</span></span><br><span class="line"><span class="comment">#  mapAll: true           # 是否整表映射, 要求源表和目标表字段名一模一样 (如果targetColumns也配置了映射,则以targetColumns配置为准)</span></span><br><span class="line">  targetColumns:          <span class="comment"># 字段映射, 格式: 目标表字段: 源表字段, 如果字段名一样源表字段名可不填</span></span><br><span class="line">    <span class="built_in">id</span>:</span><br><span class="line">    perm_description:</span><br><span class="line">    perm_name:</span><br><span class="line"><span class="comment">#  etlCondition: &quot;where c_time&gt;=&#123;&#125;&quot;</span></span><br><span class="line">  commitBatch: 3000 <span class="comment"># 批量提交的大小</span></span><br><span class="line"><span class="comment">## Mirror schema synchronize config</span></span><br><span class="line"><span class="comment">#dataSourceKey: defaultDS</span></span><br><span class="line"><span class="comment">#destination: example</span></span><br><span class="line"><span class="comment">#groupId: g1</span></span><br><span class="line"><span class="comment">#outerAdapterKey: mysql1</span></span><br><span class="line"><span class="comment">#concurrent: true</span></span><br><span class="line"><span class="comment">#dbMapping:</span></span><br><span class="line"><span class="comment">#  mirrorDb: true</span></span><br><span class="line"><span class="comment">#  database: mytest</span></span><br></pre></td></tr></table></figure></li><li><p><code>test_oracle2</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dataSourceKey: defaultDS</span><br><span class="line">destination: example</span><br><span class="line">groupId: g1</span><br><span class="line">outerAdapterKey: oracle2</span><br><span class="line">concurrent: <span class="literal">true</span></span><br><span class="line">dbMapping:</span><br><span class="line">  database: touch-test</span><br><span class="line">  table: t_auth_role_m</span><br><span class="line">  targetTable: covid.t_auth_role_m</span><br><span class="line">  targetPk:</span><br><span class="line">    <span class="built_in">id</span>: <span class="built_in">id</span></span><br><span class="line"><span class="comment">#  mapAll: true</span></span><br><span class="line">  targetColumns:</span><br><span class="line">    <span class="built_in">id</span>:</span><br><span class="line">    role_description:</span><br><span class="line">    role_name:</span><br><span class="line">    role_type:</span><br><span class="line"><span class="comment">#  etlCondition: &quot;where c_time&gt;=&#123;&#125;&quot;</span></span><br><span class="line">  commitBatch: 3000 <span class="comment"># 批量提交的大小</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;canal [kə’næl]，译意为水道&amp;#x2F;管道&amp;#x2F;沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费.&lt;/p&gt;
&lt;p&gt;版本：&lt;br&gt;&lt;code&gt;canal&lt;/code&gt; 1.1.6&lt;br&gt;&lt;code&gt;MySQL&lt;/code&gt; 8.0 +&lt;br&gt;&lt;code&gt;oracle&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="canal" scheme="http://giveme5.cc/categories/canal/"/>
    
    
    <category term="canal" scheme="http://giveme5.cc/tags/canal/"/>
    
    <category term="mysql" scheme="http://giveme5.cc/tags/mysql/"/>
    
    <category term="oracle" scheme="http://giveme5.cc/tags/oracle/"/>
    
    <category term="多数据源" scheme="http://giveme5.cc/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>spring shardingSphere 多数据源</title>
    <link href="http://giveme5.cc/2022/03/21/spring/srpingShardingSphere/"/>
    <id>http://giveme5.cc/2022/03/21/spring/srpingShardingSphere/</id>
    <published>2022-03-21T11:02:02.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>Apache ShardingSphere<br>Apache ShardingSphere 是一套开源的分布式数据库解决方案组成的生态圈。Spring集成Apache ShardingSphere 是一套目前比较好的分库分表的方案。<br>Apache ShardingSphere JDBC 目前只支持同构数据库，本文通用自定义数据源实现异构数据库（spring boot + jpa + oracle + mysql）的分库分表。</p><p>版本：<br><code>spring boot</code> V2.6.1<br><code>Apache ShardingSphere</code> V5.1.0</p><p><em>更新历史</em><br>无</p><hr><span id="more"></span><p>Apache ShardingSphere JDBC 目前只支持同构数据库, 可通用自定义数据源实现异构数据库（oracle + mysql）的分库分表。<br>以 oracle 数据库 作为 ShardingSphere JDBC 支持的主数据库。</p><p>主要步骤：</p><ul><li><code>DataSource</code> (javax.sql.DataSource)</li><li><code>EntityManagerFactory</code> (javax.persistence.EntityManagerFactory)</li><li><code>EntityManager</code> ( javax.persistence.EntityManager)</li><li><code>TransactionManager</code> (org.springframework.transaction.TransactionManager)</li><li><code>JdbcTemplate</code> (org.springframework.jdbc.core.JdbcTemplate)</li></ul><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="pom"><a href="#pom" class="headerlink" title="pom"></a>pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shardingsphere-jdbc-core-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication(exclude = JtaAutoConfiguration.class)</span> <span class="comment">//使用ShardingSphere的分布式管理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(XgfyBridgeApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DataSource"><a href="#DataSource" class="headerlink" title="DataSource"></a>DataSource</h3><p>Apache ShardingSphere 的数据源作为主DataSource</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataSourceConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;shardingSphereDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> DataSource shardingSphereDataSource;  <span class="comment">// 使用ShardingSphere 自动装载的 DataSource</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;primaryDataSource&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;primaryDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">primaryDatasource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shardingSphereDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多数据源配置"><a href="#多数据源配置" class="headerlink" title="多数据源配置"></a>多数据源配置</h3><ul><li><p>优先数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(</span></span><br><span class="line"><span class="meta">        entityManagerFactoryRef = &quot;entityManagerFactoryPrimary&quot;,</span></span><br><span class="line"><span class="meta">        transactionManagerRef = &quot;transactionManagerPrimary&quot;,</span></span><br><span class="line"><span class="meta">        basePackages = &#123;&quot;xxx.xxxx&quot;&#125;)</span> <span class="comment">//设置Repository所在位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimaryConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JpaProperties jpaProperties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;primaryDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> DataSource primaryDataSource;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2) EntityManagerFactory</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;entityManagerFactoryPrimary&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> EntityManagerFactory <span class="title function_">entityManagerFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">HibernateJpaVendorAdapter</span> <span class="variable">vendorAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HibernateJpaVendorAdapter</span>();</span><br><span class="line">        vendorAdapter.setDatabase(Database.ORACLE);</span><br><span class="line">        vendorAdapter.setGenerateDdl(<span class="literal">false</span>);</span><br><span class="line">        vendorAdapter.setShowSql(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">LocalContainerEntityManagerFactoryBean</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LocalContainerEntityManagerFactoryBean</span>();</span><br><span class="line">        factory.setJpaVendorAdapter(vendorAdapter);</span><br><span class="line">        factory.setPersistenceUnitName(<span class="string">&quot;default&quot;</span>);</span><br><span class="line">        factory.setPackagesToScan(<span class="string">&quot;xxxxxxxxx.entity&quot;</span>);</span><br><span class="line">        factory.setDataSource(primaryDataSource);</span><br><span class="line">        factory.setJpaPropertyMap(jpaProperties.getProperties());</span><br><span class="line">        factory.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> factory.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3） EntityManager</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;entityManagerPrimary&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="keyword">public</span> EntityManager <span class="title function_">entityManager</span><span class="params">(<span class="meta">@Qualifier(&quot;entityManagerFactoryPrimary&quot;)</span> EntityManagerFactory entityManagerFactory)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SharedEntityManagerCreator.createSharedEntityManager(entityManagerFactory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4） TransactionManager</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;transactionManagerPrimary&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="keyword">public</span> PlatformTransactionManager <span class="title function_">transactionManager</span><span class="params">(<span class="meta">@Qualifier(&quot;entityManagerFactoryPrimary&quot;)</span> EntityManagerFactory entityManagerFactory)</span>&#123;</span><br><span class="line">        <span class="type">JpaTransactionManager</span> <span class="variable">txManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JpaTransactionManager</span>();</span><br><span class="line">        txManager.setEntityManagerFactory(entityManagerFactory);</span><br><span class="line">        <span class="keyword">return</span> txManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 5） JdbcTemplate</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;jdbcTemplateSharding&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="keyword">public</span> JdbcTemplate <span class="title function_">jdbcTemplateSharding</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JdbcTemplate</span> <span class="variable">jdbcTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>();</span><br><span class="line">        jdbcTemplate.setDataSource(primaryDataSource);</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>其他数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(</span></span><br><span class="line"><span class="meta">        entityManagerFactoryRef = &quot;entityManagerFactoryYixing&quot;,</span></span><br><span class="line"><span class="meta">        transactionManagerRef = &quot;transactionManagerYixing&quot;,</span></span><br><span class="line"><span class="meta">        basePackages = &#123;&quot;xx.xxxx&quot;&#125;)</span> <span class="comment">//设置Repository所在位置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecondConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JpaProperties jpaProperties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;yixingDataSource&quot;)</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource.yixing&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">yixingDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;entityManagerYixing&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> EntityManager <span class="title function_">entityManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entityManagerFactoryyixing().createEntityManager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;entityManagerFactoryYixing&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> EntityManagerFactory <span class="title function_">entityManagerFactoryyixing</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">HibernateJpaVendorAdapter</span> <span class="variable">vendorAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HibernateJpaVendorAdapter</span>();</span><br><span class="line">        vendorAdapter.setDatabase(Database.MYSQL);</span><br><span class="line">        vendorAdapter.setGenerateDdl(<span class="literal">false</span>);</span><br><span class="line">        vendorAdapter.setShowSql(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">LocalContainerEntityManagerFactoryBean</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LocalContainerEntityManagerFactoryBean</span>();</span><br><span class="line">        factory.setJpaVendorAdapter(vendorAdapter);</span><br><span class="line">        factory.setPersistenceUnitName(<span class="string">&quot;yixing&quot;</span>);</span><br><span class="line">        factory.setPackagesToScan(<span class="string">&quot;xxxx.entity&quot;</span>);</span><br><span class="line">        factory.setDataSource(yixingDataSource());</span><br><span class="line">        factory.setJpaPropertyMap(jpaProperties.getProperties());</span><br><span class="line">        factory.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> factory.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;transactionManageryixing&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> PlatformTransactionManager <span class="title function_">transactionManageryixing</span><span class="params">(<span class="meta">@Qualifier(&quot;entityManagerFactoryYixing&quot;)</span> EntityManagerFactory entityManagerFactory)</span>&#123;</span><br><span class="line">        <span class="type">JpaTransactionManager</span> <span class="variable">txManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JpaTransactionManager</span>();</span><br><span class="line">        txManager.setEntityManagerFactory(entityManagerFactory);</span><br><span class="line">        <span class="keyword">return</span> txManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;jdbcTemplateYixing&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JdbcTemplate <span class="title function_">jdbcTemplateYixing</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JdbcTemplate</span> <span class="variable">jdbcTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>();</span><br><span class="line">        jdbcTemplate.setDataSource(yixingDataSource());</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="yml文件"><a href="#yml文件" class="headerlink" title="yml文件"></a>yml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  thymeleaf:</span><br><span class="line">    cache: false</span><br><span class="line">  jpa:</span><br><span class="line">    hibernate:</span><br><span class="line">      ddl-auto: none</span><br><span class="line">      database-platform: org.hibernate.dialect.Oracle12cDialect</span><br><span class="line">    open-in-view: false</span><br><span class="line">    show-sql: true</span><br><span class="line"></span><br><span class="line">  datasource:</span><br><span class="line">    yixing:</span><br><span class="line">      database-platform: org.hibernate.dialect.MySQL8Dialect</span><br><span class="line">      type: com.zaxxer.hikari.HikariDataSource</span><br><span class="line">      jdbc-url: jdbc:mysql://192.168.1.x:3306/qz?serverTimezone=UTC&amp;useSSL=false</span><br><span class="line">      driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">      username: &quot;xxx&quot;</span><br><span class="line">      password: &quot;xxx&quot;</span><br><span class="line">      hikari:</span><br><span class="line">        maximumPoolSize: 50</span><br><span class="line">        poolName: yixing_HikariPool</span><br><span class="line"></span><br><span class="line">  shardingsphere:</span><br><span class="line">    enabled: true</span><br><span class="line">    datasource:</span><br><span class="line">      names: ds-master, ds-dr</span><br><span class="line">      ds-master:</span><br><span class="line">        type: com.zaxxer.hikari.HikariDataSource</span><br><span class="line">        jdbc-url: jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.x)(PORT = 1521) )  (CONNECT_DATA =(SERVICE_NAME = orcl)) )</span><br><span class="line">        driver-class-name: oracle.jdbc.OracleDriver</span><br><span class="line">        username: xxx</span><br><span class="line">        password: xxx</span><br><span class="line">        hikari:</span><br><span class="line">          maximumPoolSize: 50</span><br><span class="line">          poolName: master_HikariPool</span><br><span class="line">      ds-dr:</span><br><span class="line">        type: com.zaxxer.hikari.HikariDataSource</span><br><span class="line">        jdbc-url: jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.x)(PORT = 1521) )  (CONNECT_DATA =(SERVICE_NAME = ORCL)) )</span><br><span class="line">        driver-class-name: oracle.jdbc.OracleDriver</span><br><span class="line">        username: &quot;xxx&quot;</span><br><span class="line">        password: &quot;xxx&quot;</span><br><span class="line">        hikari:</span><br><span class="line">          maximumPoolSize: 50</span><br><span class="line">          poolName: dr_HikariPool</span><br><span class="line">    rules:</span><br><span class="line">      sharding:</span><br><span class="line">        # tables -----------------------------------------------------</span><br><span class="line">        tables:</span><br><span class="line">          t_acid_result_dr:</span><br><span class="line">            actual-data-nodes: ds-master.t_acid_result_dr_$-&gt;&#123;0..31&#125;</span><br><span class="line">            table-strategy:</span><br><span class="line">              standard:</span><br><span class="line">                sharding-column: id_card_hash</span><br><span class="line">                sharding-algorithm-name: acid-inline</span><br><span class="line">            key-generate-strategy:</span><br><span class="line">              column: id</span><br><span class="line">              key-generator-name: mysnowflake</span><br><span class="line">          t_acid_result_yx:</span><br><span class="line">            actual-data-nodes: ds-master.t_acid_result_yx_$-&gt;&#123;0..31&#125;</span><br><span class="line">            table-strategy:</span><br><span class="line">              standard:</span><br><span class="line">                sharding-column: id_card_hash</span><br><span class="line">                sharding-algorithm-name: acid-yx-inline</span><br><span class="line">            key-generate-strategy:</span><br><span class="line">              column: id</span><br><span class="line">              key-generator-name: yxsnowflake</span><br><span class="line">          t_machan_check_dr:</span><br><span class="line">            actual-data-nodes: ds-master.t_machan_check_dr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # key-generators ------------------------</span><br><span class="line">        key-generators:</span><br><span class="line">          mysnowflake:</span><br><span class="line">            type: SNOWFLAKE</span><br><span class="line">            props:</span><br><span class="line">              worker-id: 11</span><br><span class="line">          yxsnowflake:</span><br><span class="line">            type: SNOWFLAKE</span><br><span class="line">            props:</span><br><span class="line">              worker-id: 12</span><br><span class="line">        # sharding-algorithms ------------------------------------------------</span><br><span class="line">        sharding-algorithms:</span><br><span class="line">          acid-inline:</span><br><span class="line">            type: INLINE</span><br><span class="line">            props:</span><br><span class="line">              algorithm-expression: t_acid_result_dr_$-&gt;&#123;id_card_hash % 32&#125;</span><br><span class="line">          acid-yx-inline:</span><br><span class="line">            type: INLINE</span><br><span class="line">            props:</span><br><span class="line">              algorithm-expression: t_acid_result_yx_$-&gt;&#123;id_card_hash % 32&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><p>主数据源<br>和普通jpa 一样， 无区别</p></li><li><p>其他数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class, transactionManager = &quot;transactionManageryixing&quot;)</span>  <span class="comment">//特别指定 transactionManager</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YxUploadService</span> &#123;</span><br><span class="line">xxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;Apache ShardingSphere&lt;br&gt;Apache ShardingSphere 是一套开源的分布式数据库解决方案组成的生态圈。Spring集成Apache ShardingSphere 是一套目前比较好的分库分表的方案。&lt;br&gt;Apache ShardingSphere JDBC 目前只支持同构数据库，本文通用自定义数据源实现异构数据库（spring boot + jpa + oracle + mysql）的分库分表。&lt;/p&gt;
&lt;p&gt;版本：&lt;br&gt;&lt;code&gt;spring boot&lt;/code&gt; V2.6.1&lt;br&gt;&lt;code&gt;Apache ShardingSphere&lt;/code&gt; V5.1.0&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="spring" scheme="http://giveme5.cc/categories/spring/"/>
    
    
    <category term="多数据源" scheme="http://giveme5.cc/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
    <category term="spring" scheme="http://giveme5.cc/tags/spring/"/>
    
    <category term="spring boot" scheme="http://giveme5.cc/tags/spring-boot/"/>
    
    <category term="jpa" scheme="http://giveme5.cc/tags/jpa/"/>
    
    <category term="Apache ShardingSphere" scheme="http://giveme5.cc/tags/Apache-ShardingSphere/"/>
    
  </entry>
  
  <entry>
    <title>spring Validator</title>
    <link href="http://giveme5.cc/2021/11/24/spring/srpingValidator/"/>
    <id>http://giveme5.cc/2021/11/24/spring/srpingValidator/</id>
    <published>2021-11-24T11:02:02.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>JSR-303 Validation<br>JSR-303 是 JAVA EE 中的一项子规范，叫做 Bean Validation，官方参考实现是Hibernate Validator。</p><p>本文以 <code>spring boot</code> V2.4.6 版本为例说明如何使用。</p><p><em>更新历史</em><br>无</p><hr><span id="more"></span><h2 id="JSR-303-基本的校验规则"><a href="#JSR-303-基本的校验规则" class="headerlink" title="JSR 303 基本的校验规则"></a>JSR 303 基本的校验规则</h2><p>常用的</p><ul><li><p>空检查<br><code>@Null</code>  验证对象是否为null<br><code>@NotNull</code>  验证对象是否不为null, 无法查检长度为0的字符串<br><code>@NotBlank</code>  检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.<br><code>@NotEmpty</code>  检查约束元素是否为NULL或者是EMPTY.</p></li><li><p>Booelan检查<br><code>@AssertTrue</code>  验证 Boolean 对象是否为 true<br><code>@AssertFalse</code>  验证 Boolean 对象是否为 false</p></li><li><p>长度检查<br><code>@Size(min=, max=)</code>  验证对象（Array,Collection,Map,String）长度是否在给定的范围之内<br><code>@Length(min=, max=)</code>  验证约束字符串是否包含在最小和最大之间。</p></li><li><p>日期检查<br><code>@Past</code>  验证 Date 和 Calendar 对象是否在当前时间之前，验证成立的话被注释的元素一定是一个过去的日期<br><code>@Future</code>  验证 Date 和 Calendar 对象是否在当前时间之后，验证成立的话被注释的元素一定是一个将来的日期<br><code>@Pattern</code>  验证 String 对象是否符合正则表达式的规则，被注释的元素符合制定的正则表达式，regexp:正则表达式 flags: 指定Pattern.Flag 的数组，表示正则表达式的相关选项。</p></li><li><p>数值检查<br><em><strong>建议使用在Stirng,Integer类型，不建议使用在 int 类型上，因为表单值为 空 时无法转换为 int，</strong></em><br><code>@Min</code>  验证 Number 和 String 对象是否大等于指定的值<br><code>@Max</code>  验证 Number 和 String 对象是否小等于指定的值<br><code>@DecimalMax</code>  被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度（ Double, float, BigDecimal ）<br><code>@DecimalMin</code>  被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度<br><code>@Digits</code>  验证 Number 和 String 的构成是否合法<br><code>@Digits(integer=,fraction=)</code>  验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。<br><code>@Range(min=, max=)</code>  被指定的元素必须在合适的范围内<br><code>@Range(min=10000,max=50000,message=”range.bean.wage”)</code><br><code>@Valid</code>  递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)<br><code>@CreditCardNumber</code>  信用卡验证<br><code>@Email</code>  验证是否是邮件地址，如果为null,不进行验证，算通过验证。<br><code>@ScriptAssert(lang= ,script=, alias=) </code><br><code>@URL(protocol=,host=, port=,regexp=, flags=)  </code></p></li></ul><h2 id="spring-结合"><a href="#spring-结合" class="headerlink" title="spring 结合"></a>spring 结合</h2><h3 id="自动触发"><a href="#自动触发" class="headerlink" title="自动触发"></a>自动触发</h3><ul><li><p>controller<br>在 controller 中搭配 <code>@Valid</code> <code>BindingResult</code> 使用， 校验entity的数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(value = &quot;app&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity <span class="title function_">add</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@ModelAttribute</span> AppEntity entity , BindingResult result)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.badRequest().body(result.getAllErrors().stream()</span><br><span class="line">                .map(DefaultMessageSourceResolvable::getDefaultMessage)</span><br><span class="line">                .reduce((m1, m2) -&gt; m1 + <span class="string">&quot;；&quot;</span> + m2)</span><br><span class="line">                .orElse(<span class="string">&quot;参数输入有误！&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Spring data jpa<br>Spring data jpa 在事务提交前也会触发，如果数据没通过校验会出现如下类似的异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error <span class="keyword">while</span> committing the transaction</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Caused by: javax.validation.ConstraintViolationException: Validation failed <span class="keyword">for</span> classes [xxx.xxx.xxxEntity] during update time <span class="keyword">for</span> groups [javax.validation.groups.Default, ]</span><br><span class="line">List of constraint violations:[</span><br><span class="line">ConstraintViolationImpl&#123;interpolatedMessage=<span class="string">&#x27;不是金额形式&#x27;</span>, propertyPath=mobile, rootBeanClass=<span class="keyword">class</span> <span class="title class_">xxx</span>.xxx.xxxEntity, messageTemplate=<span class="string">&#x27;不是金额形式&#x27;</span>&#125;</span><br><span class="line">ConstraintViolationImpl&#123;interpolatedMessage=<span class="string">&#x27;个数必须在0和16之间&#x27;</span>, propertyPath=mobile, rootBeanClass=<span class="keyword">class</span> <span class="title class_">xxx</span>.xxx.xxxEntity, messageTemplate=<span class="string">&#x27;&#123;javax.validation.constraints.Size.message&#125;&#x27;</span>&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这是异常，应该要避免出现。</p></li></ul><h3 id="手动触发"><a href="#手动触发" class="headerlink" title="手动触发"></a>手动触发</h3><p>Bean Validation 还可自定义规划并且手动触发校验。<br>注意 <code>MoneyValidator</code> 和 <code>Money</code> 相互一致</p><ul><li><p>自定义Validation注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xxx.MoneyValidator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy= MoneyValidator.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Money &#123;</span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span><span class="string">&quot;不是金额形式&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>自定义Validation校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xxx.Money;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MoneyValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;Money, String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">moneyReg</span> <span class="operator">=</span> <span class="string">&quot;^\\d+(\\.\\d&#123;1,2&#125;)?$&quot;</span>;<span class="comment">//表示金额的正则表达式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Pattern</span> <span class="variable">moneyPattern</span> <span class="operator">=</span> Pattern.compile(moneyReg);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(Money constraintAnnotation)</span> &#123;</span><br><span class="line">        ConstraintValidator.<span class="built_in">super</span>.initialize(constraintAnnotation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String value, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> moneyPattern.matcher(value).matches();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>手动触发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.validation.ConstraintViolation;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Validator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.groups.Default;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest(classes = Application.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServiceTest</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动注入 validator</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Validator validator;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">userTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">UrUserEntity</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrUserEntity</span>();</span><br><span class="line"></span><br><span class="line">        user.setVersion(<span class="number">0</span>);</span><br><span class="line">        user.setMobile(<span class="string">&quot;123456789012345678s&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 手动触发</span></span><br><span class="line">        Set&lt;ConstraintViolation&lt;UrUserEntity&gt;&gt; violationSet = validator.validate(user, Default.class);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != violationSet) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">messages</span> <span class="operator">=</span> violationSet.stream()</span><br><span class="line">                    .map(ConstraintViolation::getMessage)</span><br><span class="line">                    .reduce((m1, m2) -&gt; m1 + <span class="string">&quot;；&quot;</span> + m2)</span><br><span class="line">                    .orElse(<span class="string">&quot;参数输入有误！&quot;</span>);</span><br><span class="line">            System.out.println(messages);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UrUserEntity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column(name = &quot;mobile&quot;, length = 16, nullable = false)</span></span><br><span class="line">    <span class="meta">@Size(max = 16)</span></span><br><span class="line">    <span class="meta">@Money</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@Money 给 mobile校验仅仅是玩笑</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;JSR-303 Validation&lt;br&gt;JSR-303 是 JAVA EE 中的一项子规范，叫做 Bean Validation，官方参考实现是Hibernate Validator。&lt;/p&gt;
&lt;p&gt;本文以 &lt;code&gt;spring boot&lt;/code&gt; V2.4.6 版本为例说明如何使用。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="spring" scheme="http://giveme5.cc/categories/spring/"/>
    
    
    <category term="spring" scheme="http://giveme5.cc/tags/spring/"/>
    
    <category term="spring boot" scheme="http://giveme5.cc/tags/spring-boot/"/>
    
    <category term="Validator" scheme="http://giveme5.cc/tags/Validator/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper</title>
    <link href="http://giveme5.cc/2021/11/15/web%20server/zookeeper/zookeeper/"/>
    <id>http://giveme5.cc/2021/11/15/web%20server/zookeeper/zookeeper/</id>
    <published>2021-11-15T02:48:42.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>zookeeper 安装</p><p><em>更新历史</em><br>无</p><span id="more"></span><h2 id="单机安装"><a href="#单机安装" class="headerlink" title="单机安装"></a>单机安装</h2><p>计划zookeeper安装路径为 <code>/data/zookeeper</code> , 以 <code>apache-zookeeper-3.6.3</code> 为例。</p><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xvf apache-zookeeper-3.6.3-bin.tar.gz -C /data</span><br><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"><span class="built_in">mv</span> apache-zookeeper-3.6.3-bin zookeeper</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/zookeeper/conf</span><br><span class="line"><span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><p><code>zoo.cfg</code> 内容如下，<code>admin.serverPort</code> 根据实际情况修改， 默认会 占用<code>8081</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The number of milliseconds of each tick</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># The number of ticks that the initial </span></span><br><span class="line"><span class="comment"># synchronization phase can take</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># The number of ticks that can pass between </span></span><br><span class="line"><span class="comment"># sending a request and getting an acknowledgement</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># the directory where the snapshot is stored.</span></span><br><span class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></span><br><span class="line"><span class="comment"># example sakes.</span></span><br><span class="line">dataDir=/data/zookeeper/data</span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=12181</span><br><span class="line">admin.serverPort=12180</span><br><span class="line"></span><br><span class="line"><span class="comment"># the maximum number of client connections.</span></span><br><span class="line"><span class="comment"># increase this if you need to handle more clients</span></span><br><span class="line"><span class="comment">#maxClientCnxns=60</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Be sure to read the maintenance section of the </span></span><br><span class="line"><span class="comment"># administrator guide before turning on autopurge.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The number of snapshots to retain in dataDir</span></span><br><span class="line"><span class="comment">#autopurge.snapRetainCount=3</span></span><br><span class="line"><span class="comment"># Purge task interval in hours</span></span><br><span class="line"><span class="comment"># Set to &quot;0&quot; to disable auto purge feature</span></span><br><span class="line"><span class="comment">#autopurge.purgeInterval=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Metrics Providers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># https://prometheus.io Metrics Exporter</span></span><br><span class="line"><span class="comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></span><br><span class="line"><span class="comment">#metricsProvider.httpPort=7000</span></span><br><span class="line"><span class="comment">#metricsProvider.exportJvmInfo=true</span></span><br></pre></td></tr></table></figure><h3 id="systemctl-服务"><a href="#systemctl-服务" class="headerlink" title="systemctl 服务"></a>systemctl 服务</h3><ul><li><p>脚本<br><code>vim /usr/lib/systemd/system/zookeeper.service</code><br>zookeeper.service 内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Zookeeper Service unit Configuration</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/data/zookeeper/bin/zkServer.sh start </span><br><span class="line">ExecStop=/data/zookeeper/bin/zkServer.sh stop</span><br><span class="line">PIDFile=/data/zookeeper/data/zookeeper_server.pid</span><br><span class="line"></span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>执行以下命令重载unit配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></li><li><p>开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> zookeeper</span><br><span class="line">systemctl start zookeeper</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;主要内容&quot;&gt;&lt;a href=&quot;#主要内容&quot; class=&quot;headerlink&quot; title=&quot;主要内容&quot;&gt;&lt;/a&gt;主要内容&lt;/h2&gt;&lt;p&gt;zookeeper 安装&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;</summary>
    
    
    
    <category term="server" scheme="http://giveme5.cc/categories/server/"/>
    
    
    <category term="server" scheme="http://giveme5.cc/tags/server/"/>
    
    <category term="zookeeper" scheme="http://giveme5.cc/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>flink 集群架构原理</title>
    <link href="http://giveme5.cc/2021/10/18/hadoop/flink1/"/>
    <id>http://giveme5.cc/2021/10/18/hadoop/flink1/</id>
    <published>2021-10-18T11:13:08.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><ul><li>flink 集群架构原理</li><li>flink 集群架构原理</li></ul><hr><span id="more"></span><h2 id="集群架构"><a href="#集群架构" class="headerlink" title="集群架构"></a>集群架构</h2><p><img src="/images/hadoop/flink/flink1.png"></p><ul><li>JobManager<br>管理节点，每个集群至少一个，管理整个集群计算资源，Job 管理与调度执行，以及 Checkpoint 协调。</li><li>TaskManager<br>每个集群有多个TM，负责计算资源提供。</li><li>Client<br>本地执行应用main()方法解析JobGraph 对象，并最终将JobGraph 提交到 JobManager 运行，同时监控Job 执行的状态。</li></ul><h3 id="JobManager"><a href="#JobManager" class="headerlink" title="JobManager"></a>JobManager</h3><h3 id="TaskManager"><a href="#TaskManager" class="headerlink" title="TaskManager"></a>TaskManager</h3><h2 id="集群部署模式"><a href="#集群部署模式" class="headerlink" title="集群部署模式"></a>集群部署模式</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flink 集群架构原理&lt;/li&gt;
&lt;li&gt;flink 集群架构原理&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="hadoop" scheme="http://giveme5.cc/categories/hadoop/"/>
    
    
    <category term="bigData" scheme="http://giveme5.cc/tags/bigData/"/>
    
    <category term="hadoop" scheme="http://giveme5.cc/tags/hadoop/"/>
    
    <category term="flink" scheme="http://giveme5.cc/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title>yarn集群架构原理</title>
    <link href="http://giveme5.cc/2021/10/14/hadoop/yarn/"/>
    <id>http://giveme5.cc/2021/10/14/hadoop/yarn/</id>
    <published>2021-10-14T03:13:08.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><ul><li>yarn集群架构原理</li></ul><hr><span id="more"></span><h2 id="主要组件"><a href="#主要组件" class="headerlink" title="主要组件"></a>主要组件</h2><p><img src="/images/hadoop/hadoop/yarn1.png"></p><ul><li><p>ResouManager(NM):<br>负责处理客户端请求<br>监控 NodeManager<br>启动和监控 APPlicationMaster<br>资源的分配和调度 </p></li><li><p>NodeManager:<br>管理单个Worker节点上的资源;<br>处理来自ResourceManager的命令<br>处理来自ApplicationMaster的命令<br>汇报资源状态 </p></li><li><p>ApplicationMaster:<br>负责数据的切分<br>为应用申请计算资源，并分配给Task<br>任务的监控与容错<br>运行在Worker节点上 </p></li><li><p>Container:<br>资源抽象，封装了节点上的多维度资源，如CPU，内存，网络资源等。</p></li><li><p>Dispatcher<br>整体的设计思路是一个生产者和消费者模型，支持的多生产者和多消费者的模式。</p></li></ul><h2 id="资源调度"><a href="#资源调度" class="headerlink" title="资源调度"></a>资源调度</h2><p><img src="/images/hadoop/hadoop/yarn2.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yarn集群架构原理&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="hadoop" scheme="http://giveme5.cc/categories/hadoop/"/>
    
    
    <category term="bigData" scheme="http://giveme5.cc/tags/bigData/"/>
    
    <category term="hadoop" scheme="http://giveme5.cc/tags/hadoop/"/>
    
    <category term="yarn" scheme="http://giveme5.cc/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>hadoop HA集群搭建</title>
    <link href="http://giveme5.cc/2021/09/18/hadoop/hadoop/"/>
    <id>http://giveme5.cc/2021/09/18/hadoop/hadoop/</id>
    <published>2021-09-18T13:32:24.000Z</published>
    <updated>2022-12-08T08:42:18.514Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><ul><li>hadoop HA集群搭建</li><li>前期准备</li><li>zookeeper</li><li>hadoop</li></ul><hr><span id="more"></span><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="软硬件规划"><a href="#软硬件规划" class="headerlink" title="软硬件规划"></a>软硬件规划</h3><ul><li><p>硬件<br><img src="/images/hadoop/hadoop/hadoop1.png"><br>所有服务器统一 4核CPU 16G内存</p></li><li><p>软件<br>CentOS 7.9<br>OpenJDK 11<br>hadoop 3.3.1</p></li><li><p>目录结构<br>安装目录和数据目录分离，软件都安装在<code>/home/hadoop</code>，数据都存储在<code>/data/hadoop</code>,系统安装时建议<code>/data</code>单独分区。</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hadoop软件安装目录</span></span><br><span class="line">/home/hadoop/</span><br><span class="line">    ├── hadoop-3.3.1</span><br><span class="line">    ├── <span class="built_in">source</span></span><br><span class="line">    └── apache-zookeeper-3.7.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据目录</span></span><br><span class="line">/data</span><br><span class="line">    └── hadoop</span><br><span class="line">        ├── dfs</span><br><span class="line">        │   ├── data</span><br><span class="line">        │   └── name</span><br><span class="line">        ├── hdfs</span><br><span class="line">        ├── <span class="built_in">history</span></span><br><span class="line">        │   ├── <span class="keyword">done</span></span><br><span class="line">        │   └── done_intermediate</span><br><span class="line">        ├── tmp</span><br><span class="line">        ├── var</span><br><span class="line">        ├── yarn</span><br><span class="line">        │   └── nm</span><br><span class="line">        └── zk</span><br><span class="line">            ├── data</span><br><span class="line">            ├── journaldata</span><br><span class="line">            └── logs</span><br></pre></td></tr></table></figure><h3 id="查看系统"><a href="#查看系统" class="headerlink" title="查看系统"></a>查看系统</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/redhat-release</span><br></pre></td></tr></table></figure><h3 id="yum源"><a href="#yum源" class="headerlink" title="yum源"></a>yum源</h3><p>使用阿里云的yum源<br><font size="" color="red">所有服务器都需操作</font></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">sed -i -e <span class="string">&#x27;/mirrors.cloud.aliyuncs.com/d&#x27;</span> -e <span class="string">&#x27;/mirrors.aliyuncs.com/d&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3><p><font size="" color="red">所有服务器都需操作</font></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># delete 默认 JDK</span></span><br><span class="line">yum -y remove java</span><br><span class="line"></span><br><span class="line"><span class="comment"># install OpenJDK 11</span></span><br><span class="line">yum install -y java-11-openjdk-devel.x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换 java版本</span></span><br><span class="line">alternatives --config java</span><br><span class="line">共有 2 个提供“java”的程序。</span><br><span class="line"></span><br><span class="line">  选项    命令</span><br><span class="line">-----------------------------------------------</span><br><span class="line">*+ 1           java-1.8.0-openjdk.x86_64 (/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.262.b10-1.el7.x86_64/jre/bin/java)</span><br><span class="line">   2           java-11-openjdk.x86_64 (/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/bin/java)</span><br><span class="line"></span><br><span class="line">按 Enter 保留当前选项[+]，或者键入选项编号：2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认版本</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -la /usr/bin/java</span><br><span class="line">/usr/bin/java -&gt; /etc/alternatives/java</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -la /etc/alternatives/java</span><br><span class="line">/etc/alternatives/java -&gt; /usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/bin/java</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h3><p><font size="" color="red">所有服务器都需操作</font></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/zk/data</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/zk/journaldata</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/zk/logs</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/dfs/data</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/dfs/name</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/history/done</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/history/done_intermediate</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/yarn/nm</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/yarn/staging</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/tmp</span><br><span class="line"><span class="built_in">mkdir</span> -p /data/hadoop/var</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>按实际情况 <font size="" color="red">所有服务器都需操作</font><br><code>vim /etc/profile</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hadoop env -----------</span></span><br><span class="line"><span class="built_in">export</span> ZK_HOME=/home/hadoop/apache-zookeeper-3.7.0</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/home/hadoop/hadoop-3.3.1</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/</span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</span><br><span class="line"><span class="comment"># export HIVE_HOME=/home/hadoop/hive-3.1.2</span></span><br><span class="line"><span class="comment"># export SPARK_HOME=/home/hadoop/spark-3.1.2-bin-hadoop3.2</span></span><br><span class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib:$(<span class="variable">$HADOOP_HOME</span>/bin/hadoop classpath):<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$ZK_HOME/bin:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin/:$SPARK_HOME/bin:$SPARK_HOME/sbin:$HIVE_HOME/bin</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ZK_HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin/</span><br></pre></td></tr></table></figure><p>立即生效<code>source /etc/profile</code></p><h3 id="设置主机名称"><a href="#设置主机名称" class="headerlink" title="设置主机名称"></a>设置主机名称</h3><p><font size="" color="red">所有服务器都需操作</font></p><ul><li><p>hostname<br>按规划设置hostname， 重启后生效</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname xxx</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>hostname与ip映射<br>可修改本机<code>/etc/hosts/</code>或在本地dns服务器上设置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hadoop</span></span><br><span class="line">192.168.5.20 hadoop-master-a</span><br><span class="line">192.168.2.26 hadoop-master-b</span><br><span class="line">192.168.5.21 hadoop-data-1</span><br><span class="line">192.168.5.22 hadoop-data-2</span><br><span class="line">192.168.5.23 hadoop-data-3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># zookeeper</span></span><br><span class="line">192.168.5.21 zk01</span><br><span class="line">192.168.5.22 zk02</span><br><span class="line">192.168.5.23 zk03</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="建立hadoop用户"><a href="#建立hadoop用户" class="headerlink" title="建立hadoop用户"></a>建立hadoop用户</h3><p><font size="" color="red">所有服务器都需操作</font></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">useradd hadoop</span><br><span class="line">passwd hadoop</span><br><span class="line"><span class="built_in">chmod</span> u+w /etc/sudoers</span><br><span class="line">vim /etc/sudoers <span class="comment">#在root ALL=(ALL)ALL下添加 hadoop ALL=(ALL) ALL</span></span><br><span class="line"><span class="built_in">chmod</span> u-w /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R hadoop:hadoop /data/hadoop/</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><p><font size="" color="red">所有服务器都需操作</font><br>测试环境简单操作关闭防火墙， 正式环境看情况</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><h3 id="免密登录"><a href="#免密登录" class="headerlink" title="免密登录"></a>免密登录</h3><p><font size="" color="red">以下操作都是在hadoop账户进行</font></p><ul><li>在hadoop-master-a<br>上操作<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 1) 生成公私钥</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/hadoop/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/hadoop/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/hadoop/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 2）将在/home/hadoop/.ssh目录下生成公钥id_rsa.pub和私钥id_rsa将生成的秘钥，写入authorized_keys上面</span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 0600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li>其他4台机器上运行<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 1) 生成公私钥</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id -i hadoop-master-a <span class="comment">#可以看到hadoop-master-a上authorized_keys的变化</span></span><br></pre></td></tr></table></figure></li><li>同步hadoop-master-a的authorized_keys给其他机器<br><font size="" color="red">一定在hadoop-master-a用hadoop用户操作</font><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp /home/hadoop/.ssh/authorized_keys hadoop-master-b:/home/hadoop/.ssh/</span><br><span class="line">scp /home/hadoop/.ssh/authorized_keys hadoop-data-1:/home/hadoop/.ssh/</span><br><span class="line">scp /home/hadoop/.ssh/authorized_keys hadoop-data-2:/home/hadoop/.ssh/</span><br><span class="line">scp /home/hadoop/.ssh/authorized_keys hadoop-data-3:/home/hadoop/.ssh/</span><br></pre></td></tr></table></figure></li></ul><h2 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>按规划，在hadoop-data-1 上 下载 zookeeper ，<a href="https://zookeeper.apache.org/">官网</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>解压<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tar xvf apache-zookeeper-3.7.0-bin.tar.gz</span><br><span class="line"><span class="built_in">mv</span> apache-zookeeper-3.7.0-bin apache-zookeeper-3.7.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果如下 ==&gt;</span></span><br><span class="line">/home/hadoop</span><br><span class="line">    ├── hadoop-3.3.1</span><br><span class="line">    ├── <span class="built_in">source</span></span><br><span class="line">    ├── spark-3.1.2-bin-hadoop3.2</span><br><span class="line">    └── apache-zookeeper-3.7.0</span><br></pre></td></tr></table></figure></li><li>目录<br>建立zookeeper的数据、日志目录<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/data</span><br><span class="line">└── hadoop</span><br><span class="line">    ├── dfs</span><br><span class="line">    │   ├── data</span><br><span class="line">    │   └── name</span><br><span class="line">    ├── hdfs</span><br><span class="line">    ├── <span class="built_in">history</span></span><br><span class="line">    │   ├── <span class="keyword">done</span></span><br><span class="line">    │   └── done_intermediate</span><br><span class="line">    ├── tmp</span><br><span class="line">    ├── var</span><br><span class="line">    ├── yarn</span><br><span class="line">    │   └── nm</span><br><span class="line">    └── zk</span><br><span class="line">        ├── data</span><br><span class="line">        ├── journaldata</span><br><span class="line">        └── logs</span><br></pre></td></tr></table></figure></li><li>配置<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/hadoop/apache-zookeeper-3.7.0/conf/</span><br><span class="line">$ <span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">configuration.xsl  log4j.properties  zoo.cfg  zoo_sample.cfg</span><br><span class="line"></span><br><span class="line">$ vim zoo.cfg</span><br><span class="line"><span class="comment"># 编辑zoo.cfg内容如下</span></span><br><span class="line">dataDir=/data/hadoop/zk/data/</span><br><span class="line">dataLogDir=/data/hadoop/zk/logs</span><br><span class="line">server.1=zk01:2888:3888</span><br><span class="line">server.2=zk02:2888:3888</span><br><span class="line">server.3=zk03:2888:3888</span><br><span class="line"><span class="comment"># the port at which the clients will connect</span></span><br><span class="line">clientPort=2181</span><br><span class="line">quorumListenOnAllIPs=<span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>分发配置<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scp -r /home/hadoop/apache-zookeeper-3.7.0 hadoop-data-2:/home/hadoop/</span><br><span class="line">scp -r /home/hadoop/apache-zookeeper-3.7.0 hadoop-data-3:/home/hadoop/</span><br><span class="line"></span><br><span class="line"><span class="comment">#分别在hadoop-data-1, hadoop-data-2, hadoop-data-3上面配置myid文件</span></span><br><span class="line">[hadoop@hadoop-data-1 hadoop]$ <span class="built_in">echo</span> 1 &gt; /data/hadoop/zk/data/myid</span><br><span class="line">[hadoop@hadoop-data-2 hadoop]$ <span class="built_in">echo</span> 2 &gt; /data/hadoop/zk/data/myid</span><br><span class="line">[hadoop@hadoop-data-3 hadoop]$ <span class="built_in">echo</span> 3 &gt; /data/hadoop/zk/data/myid</span><br></pre></td></tr></table></figure></li><li>启动<br>分别在hadoop-data-1, hadoop-data-2, hadoop-data-3 启动zookeeper<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-data-1 hadoop]$ /home/hadoop/apache-zookeeper-3.7.0/bin/zkServer.sh start</span><br><span class="line">[hadoop@hadoop-data-2 hadoop]$ /home/hadoop/apache-zookeeper-3.7.0/bin/zkServer.sh start</span><br><span class="line">[hadoop@hadoop-data-3 hadoop]$ /home/hadoop/apache-zookeeper-3.7.0/bin/zkServer.sh start</span><br></pre></td></tr></table></figure></li></ul><h2 id="hadoop"><a href="#hadoop" class="headerlink" title="hadoop"></a>hadoop</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>登录主机<code>hadoop-master-a</code>， 配置文件主要在 <code>/home/hadoop/hadoop-3.3.1/etc/hadoop</code> 目录里</p><h4 id="环境变量-hadoop-env-sh"><a href="#环境变量-hadoop-env-sh" class="headerlink" title="环境变量 hadoop-env.sh"></a>环境变量 <code>hadoop-env.sh</code></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/</span><br></pre></td></tr></table></figure><h4 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--指定hdfs的nameservice为chinauh，需要和core-site.xml中的保持一致 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>chinauh<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- chinauh下面有两个NameNode，分别是 nn1 ，nn2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.chinauh<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn1,nn2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn1的RPC通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.chinauh.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master-a:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn1的http通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.chinauh.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master-a:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn2的RPC通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.chinauh.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master-b:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn2的http通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.chinauh.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master-b:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!-- 指定NameNode的元数据在JournalNode上的存放位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>qjournal://zk01:8485;zk02:8485;zk03:8485/chinauh<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定JournalNode在本地磁盘存放数据的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop/zk/journaldata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启NameNode失败自动切换 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置失败自动切换实现方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.chinauh<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                    sshfence</span><br><span class="line">                    shell(/bin/true)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用sshfence隔离机制时需要ssh免登陆 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/hadoop/.ssh/id_rsa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置sshfence隔离机制超时时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.connect-timeout<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- DataNode进程死亡或者网络故障造成DataNode无法与NameNode通信，NameNode不会</span></span><br><span class="line"><span class="comment">             立即把该节点判定为死亡，要经过一段超时时间。HDFS默认的超时时间是10分钟+30秒，如果定</span></span><br><span class="line"><span class="comment">    义超时时间为timeout，则其计算公式为：</span></span><br><span class="line"><span class="comment">    timeout = 2 * heartbeat.recheck.interval + 10 * dfs.heartbeat.interval --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>heartbeat.recheck.interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 单位：毫秒 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.heartbeat.interval<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 单位：秒 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在日常维护hadoop集群过程中会发现这样一种现象：某个节点由于网络故障或者</span></span><br><span class="line"><span class="comment">             DataNode进程死亡，被NameNode判定为死亡，HDFS马上自动开始数据块的容错拷贝，</span></span><br><span class="line"><span class="comment">    当该节点重新加入到集群中，由于该节点的数据并没有损坏，导致集群中某些block的</span></span><br><span class="line"><span class="comment">    备份数超过了设定数值。默认情况下要经过1个小时的时间才会对这些冗余block进行清理。</span></span><br><span class="line"><span class="comment">    而这个时长与数据块报告时间有关。DataNode会定期将该节点上的所有block信息报告给</span></span><br><span class="line"><span class="comment">    NameNode，默认间隔1小时。下面的参数可以修改报告时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.blockreport.intervalMsec<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>10000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">description</span>&gt;</span>Determines block reporting interval in milliseconds.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定磁盘预留多少空间，防止磁盘被撑满用完，单位为bytes --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.du.reserved<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>10240000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-data-1:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>Path on the local filesystem where theNameNode stores the namespace and transactions logs</span><br><span class="line">            persistently.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>Comma separated list of paths on the localfilesystem of a DataNode where it should store its</span><br><span class="line">            blocks.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>need not permissions<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--NameNode有一个工作线程池用来处理客户端的远程过程调用及集群守护进程的调用。处理程序数量越多意味着要更大的池来处理来自不同DataNode的并发心跳以及客户端并发的元数据操作。对于大集群或者有大量客户端的集群来说，通常需要增大参数dfs.namenode.handler.count的默认值10。设置该值的一般原则是将其设置为集群大小的自然对数乘以20，即20logN，N为集群大小。</span></span><br><span class="line"><span class="comment">如果该值设的太小，明显的状况就是DataNode在连接NameNode的时候总是超时或者连接被拒绝，但NameNode的远程过程调用队列很大时，远程过程调用延时就会加大。症状之间是相互影响的，很难说修改dfs.namenode.handler.count就能解决问题，但是在查找故障时，检查一下该值的设置是必要的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.handler.count<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>35<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The number of server threads for the datanode.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--读超时时间：dfs.client.socket-timeout。默认值1分钟。</span></span><br><span class="line"><span class="comment">    写超时时间：dfs.datanode.socket.write.timeout。默认8分钟。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.socket-timeout<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>600000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里设置Hadoop允许打开最大文件数，默认4096，不设置的话会提示xcievers exceeded错误--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.max.transfer.threads<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>409600<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!---块大小--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.blocksize<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>134217728<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>node2文件系统HDFS块大小为128M<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://chinauh<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/data/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>Abase for other temporary directories.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>io.file.buffer.size<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>131072<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>该属性值单位为KB，131072KB即为默认的 64M<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定zookeeper地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>ha.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>zk01:2181,zk02:2181,zk03:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">  limitations under the License. See accompanying LICENSE file.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启RM高可用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定RM的cluster id --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yrc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.recovery.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.store.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.automatic-failover.zk-base-path<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/yarn-leader-election<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.client.failover-proxy-provider<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定RM的名字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>rm1,rm2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分别指定RM的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master-b<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master-a<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定zk集群地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>zk01:2181,zk02:2181,zk03:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.local-dirs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:///data/hadoop/yarn/nm<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The address of the applications manager interface in the RM.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm1&#125;:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The address of the applications manager interface in the RM.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm2&#125;:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The address of the scheduler interface.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm1&#125;:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The address of the scheduler interface.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm2&#125;:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The http address of the RM1 web application.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm1&#125;:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The http address of the RM2 web application.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm2&#125;:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The https adddress of the RM web application.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.https.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm1&#125;:8090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The https adddress of the RM web application.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.https.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm2&#125;:8090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm1&#125;:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm2&#125;:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The address of the RM admin interface.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm1&#125;:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>The address of the RM admin interface.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.resourcemanager.hostname.rm2&#125;:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.scheduler.maximum-allocation-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>12288<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>每个节点可用内存,单位MB,默认8182MB<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.scheduler.minmum-allocation-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>1024<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">discription</span>&gt;</span>每个节点可用内存,单位MB,默认8182MB<span class="tag">&lt;/<span class="name">discription</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.vmem-pmem-ratio<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.resource.memory-mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>12288<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.vmem-check-enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>使用命令：[hadoop@hadoop-master-a ~]$ hadoop classpath 获取到<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.application.classpath<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">            /home/hadoop/hadoop-3.3.1/etc/hadoop:/home/hadoop/hadoop-3.3.1/share/hadoop/common/lib/*:/home/hadoop/hadoop-3.3.1/share/hadoop/common/*:/home/hadoop/hadoop-3.3.1/share/hadoop/hdfs:/home/hadoop/hadoop-3.3.1/share/hadoop/hdfs/lib/*:/home/hadoop/hadoop-3.3.1/share/hadoop/hdfs/*:/home/hadoop/hadoop-3.3.1/share/hadoop/mapreduce/*:/home/hadoop/hadoop-3.3.1/share/hadoop/yarn:/home/hadoop/hadoop-3.3.1/share/hadoop/yarn/lib/*:/home/hadoop/hadoop-3.3.1/share/hadoop/yarn/*</span><br><span class="line">        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意 <code>yarn.nodemanager.resource.memory-mb</code>， <code>yarn.scheduler.minimum-allocation-mb</code>， <code>yarn.scheduler.maximum-allocation-mb</code> 根据服务器内存调整。</p><h4 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span><br><span class="line">&lt;?xml-stylesheet <span class="built_in">type</span>=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">       Licensed under the Apache License, Version 2.0 (the <span class="string">&quot;License&quot;</span>);</span><br><span class="line">  you may not use this file except <span class="keyword">in</span> compliance with the License.</span><br><span class="line">  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">  Unless required by applicable law or agreed to <span class="keyword">in</span> writing, software</span><br><span class="line">  distributed under the License is distributed on an <span class="string">&quot;AS IS&quot;</span> BASIS,</span><br><span class="line">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">  See the License <span class="keyword">for</span> the specific language governing permissions and</span><br><span class="line">  limitations under the License. See accompanying LICENSE file.</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!-- Put site-specific property overrides <span class="keyword">in</span> this file. --&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hadoop-data-1:10020&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;MR JobHistory Server管理的日志的存放位置&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hadoop-data-1:19888&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;查看历史服务器已经运行完的Mapreduce作业记录的web地址，需要启动该服务才行&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.app.mapreduce.am.staging-dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/data/hadoop/yarn/staging&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.done-dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;<span class="variable">$&#123;yarn.app.mapreduce.am.staging-dir&#125;</span>/done&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;MR JobHistory Server管理的日志的存放位置,默认:/mr-history/done&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.jobhistory.intermediate-done-dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;<span class="variable">$&#123;yarn.app.mapreduce.am.staging-dir&#125;</span>/done_intermediate&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;MapReduce作业产生的日志存放位置，默认值:/mr-history/tmp&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapred.local.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/data/hadoop/var&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="workers"><a href="#workers" class="headerlink" title="workers"></a>workers</h4><p>在hadoop-master-a节点的workers文件内把localhost删除，加入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop-data-1</span><br><span class="line">hadoop-data-2</span><br><span class="line">hadoop-data-3</span><br></pre></td></tr></table></figure><h4 id="分发"><a href="#分发" class="headerlink" title="分发"></a>分发</h4><p>将&#x2F;home&#x2F;hadoop&#x2F;hadoop-3.3.1拷贝到集群其他机器上面</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ scp -r /home/hadoop/hadoop-3.3.1 hadoop-master-b:/home/hadoop/</span><br><span class="line">$ scp -r /home/hadoop/hadoop-3.3.1 hadoop-data-1:/home/hadoop/</span><br><span class="line">$ scp -r /home/hadoop/hadoop-3.3.1 hadoop-data-2:/home/hadoop/</span><br><span class="line">$ scp -r /home/hadoop/hadoop-3.3.1 hadoop-data-3:/home/hadoop/</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><h4 id="zookeeper上-格式化hadoop-ha目录"><a href="#zookeeper上-格式化hadoop-ha目录" class="headerlink" title="zookeeper上 格式化hadoop-ha目录"></a>zookeeper上 格式化hadoop-ha目录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在hadoop-master-a 上 格式化</span></span><br><span class="line">[hadoop@hadoop-master-a hadoop]$ hdfs zkfc -formatZK</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>类似这样成功<br><img src="/images/hadoop/hadoop/hadoop2.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#验证：检查zookeeper上是否已经有Hadoop HA目录，在任意一台zk节点上面</span></span><br><span class="line"><span class="variable">$ZK_HOME</span>/bin/zkCli.sh -server zk01:2181</span><br><span class="line"><span class="comment">#在打开的zk终端shell中，输入</span></span><br><span class="line">[zk: zk01:2181(CONNECTED) 2] <span class="built_in">ls</span> /</span><br><span class="line">[hadoop-ha, zookeeper]</span><br><span class="line">[zk: zk01:2181(CONNECTED) 3] <span class="built_in">ls</span> /hadoop-ha </span><br><span class="line">[chinauh]</span><br></pre></td></tr></table></figure><h4 id="journalnode"><a href="#journalnode" class="headerlink" title="journalnode"></a>journalnode</h4><p>启动namenode日志同步服务journalnode，所有ZooKeeper节点均启动，<br>journal 会监听 8485 端口， <code>namenode -format</code> 会连接此服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-data-1 ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start journalnode</span><br><span class="line">WARNING: /home/hadoop/hadoop-3.3.1/logs does not exist. Creating.</span><br><span class="line"></span><br><span class="line">[hadoop@hadoop-data-1 ~]$ jps</span><br><span class="line">27429 Jps</span><br><span class="line">8233 QuorumPeerMain</span><br><span class="line">27372 JournalNode</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他zk节点</span></span><br><span class="line">[hadoop@hadoop-data-2 root]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start journalnode</span><br><span class="line">[hadoop@hadoop-data-3 root]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start journalnode</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h4><ul><li>主namenode节点<br>在主namenode节点<code>hadoop-master-a</code>格式化NAMENODE，并启动namenode<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs namenode -format</span><br><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start namenode</span><br><span class="line">[hadoop@hadoop-master-a ~]$ jps</span><br><span class="line">29461 NameNode</span><br><span class="line">29541 Jps</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>备namenode<br>在备namenode节点同步元数据，并启动namenode 服务，此前一定要先启动主namenode<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-b ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs namenode -bootstrapStandby</span><br></pre></td></tr></table></figure><img src="/images/hadoop/hadoop/hadoop3.png"><br>启动<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-b ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start namenode</span><br><span class="line">[hadoop@hadoop-master-b ~]$ jps</span><br><span class="line">24882 NameNode</span><br><span class="line">24966 Jps</span><br></pre></td></tr></table></figure></li></ul><h4 id="ZKFC"><a href="#ZKFC" class="headerlink" title="ZKFC"></a>ZKFC</h4><p>在所有namenode节点上，启动DFSZKFailoverController<br>主namenode</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start zkfc</span><br><span class="line"></span><br><span class="line">[hadoop@hadoop-master-a ~]$ jps</span><br><span class="line">1045 Jps</span><br><span class="line">984 DFSZKFailoverController</span><br><span class="line">462 NameNode</span><br></pre></td></tr></table></figure><p>备namenode</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-b ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --daemon start zkfc</span><br><span class="line">[hadoop@hadoop-master-b ~]$ jps</span><br><span class="line">24882 NameNode</span><br><span class="line">25171 DFSZKFailoverController</span><br><span class="line">25212 Jps</span><br></pre></td></tr></table></figure><h4 id="datanode服务"><a href="#datanode服务" class="headerlink" title="datanode服务"></a>datanode服务</h4><p>在集群任意节点，启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs --workers --daemon start datanode   <span class="comment">#启动所有的datanode节点</span></span><br><span class="line"><span class="comment">#  $HADOOP_HOME/bin/hdfs --daemon start datanode启动单个datanode</span></span><br></pre></td></tr></table></figure><p>在datanode验证</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-data-3 etc]$ jps</span><br><span class="line">6050 JournalNode</span><br><span class="line">8579 Jps</span><br><span class="line">15398 QuorumPeerMain</span><br><span class="line">8471 DataNode</span><br></pre></td></tr></table></figure><p>DataNode进程已经启动。</p><h4 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h4><ul><li><p>主resourcemanager</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-b ~]$ <span class="variable">$HADOOP_HOME</span>/bin/yarn --daemon start resourcemanager</span><br><span class="line">[hadoop@hadoop-master-b ~]$ jps</span><br><span class="line">25393 ResourceManager</span><br><span class="line">24882 NameNode</span><br><span class="line">25171 DFSZKFailoverController</span><br><span class="line">25637 Jps</span><br></pre></td></tr></table></figure></li><li><p>备resourcemanager</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/yarn --daemon start resourcemanager</span><br><span class="line">[hadoop@hadoop-master-a ~]$ jps</span><br><span class="line">1331 Jps</span><br><span class="line">984 DFSZKFailoverController</span><br><span class="line">1261 ResourceManager</span><br><span class="line">462 NameNode</span><br></pre></td></tr></table></figure></li><li><p>nodemanager</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动NodeManager</span></span><br><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/yarn --workers --daemon start nodemanager</span><br><span class="line"></span><br><span class="line"><span class="comment">#在NodeManager节点中</span></span><br><span class="line">[hadoop@hadoop-data-3 etc]$ jps</span><br><span class="line">6050 JournalNode</span><br><span class="line">8724 NodeManager</span><br><span class="line">15398 QuorumPeerMain</span><br><span class="line">8471 DataNode</span><br><span class="line">8844 Jps</span><br></pre></td></tr></table></figure></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><ul><li>主namenode<br><a href="http://hadoop-master-a:50070/">http://hadoop-master-a:50070/</a><br><img src="/images/hadoop/hadoop/hadoop4.png"></li><li>备namenode<br><a href="http://hadoop-master-b:50070/">http://hadoop-master-b:50070/</a><br><img src="/images/hadoop/hadoop/hadoop5.png"></li><li>yarn Applications<br><a href="http://hadoop-master-b:8088/cluster">http://hadoop-master-b:8088/cluster</a><br><img src="/images/hadoop/hadoop/hadoop6.png"></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1 datanode 报告</span></span><br><span class="line">[hadoop@hadoop-data-3 ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs dfsadmin -report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2 重新格式化，</span></span><br><span class="line"><span class="comment">#先删除logs下所有文件后，</span></span><br><span class="line"><span class="comment">#然后删除/data/hadoop自身及所属目录 除zk，</span></span><br><span class="line"><span class="comment">#然后重新建回/data/hadoop等8个目录</span></span><br><span class="line"><span class="comment">#然后 $HADOOP_HOME/bin/hdfs namenode -format</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3 获取一个NameNode节点的HA状态</span></span><br><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs haadmin -getServiceState nn1</span><br><span class="line">active</span><br><span class="line">[hadoop@hadoop-master-a ~]$ <span class="variable">$HADOOP_HOME</span>/bin/hdfs haadmin -getServiceState nn2</span><br><span class="line">standby</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4 获取resourcemanager的HA状态</span></span><br><span class="line">[hadoop@hadoop-master-b ~]$ <span class="variable">$HADOOP_HOME</span>/bin/yarn rmadmin -getServiceState rm2</span><br><span class="line">standby</span><br><span class="line">[hadoop@hadoop-master-b ~]$ <span class="variable">$HADOOP_HOME</span>/bin/yarn rmadmin -getServiceState rm1</span><br><span class="line">active</span><br><span class="line"></span><br><span class="line"><span class="comment">#5 同步journalnode与namenode</span></span><br><span class="line">某个节点部署namenode，reboot了，然后启动时发现namenode没有起来</span><br><span class="line">异常如下</span><br><span class="line">` Journal Storage Directory root= /data/hadoop/zk/journaldata/chinauh; location= null not formatted ; journal <span class="built_in">id</span>: chinauh `</span><br><span class="line">原因：大概为journalnode保存的元数据和namenode的不一致</span><br><span class="line"></span><br><span class="line">解决： 在 master namenode 上执行 `<span class="variable">$HADOOP_HOME</span>/bin/hdfs namenode -initializeSharedEdits` </span><br><span class="line">使得journalnode与namenode保持一致。再重新启动namenode就没有问题了。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/FileSystemShell.html">Hadoop 最新 文档</a></p><p><a href="https://blog.csdn.net/cyxinda/article/details/119646724">hadoop3.3.1搭建过程(HA)</a></p><p><a href="https://www.cnblogs.com/princessmeiyi/p/5238215.html">YARN 内存参数终极详解</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hadoop HA集群搭建&lt;/li&gt;
&lt;li&gt;前期准备&lt;/li&gt;
&lt;li&gt;zookeeper&lt;/li&gt;
&lt;li&gt;hadoop&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="hadoop" scheme="http://giveme5.cc/categories/hadoop/"/>
    
    
    <category term="bigData" scheme="http://giveme5.cc/tags/bigData/"/>
    
    <category term="hadoop" scheme="http://giveme5.cc/tags/hadoop/"/>
    
    <category term="hadoop ha" scheme="http://giveme5.cc/tags/hadoop-ha/"/>
    
  </entry>
  
  <entry>
    <title>DDD</title>
    <link href="http://giveme5.cc/2020/09/21/ddd/ddd/"/>
    <id>http://giveme5.cc/2020/09/21/ddd/ddd/</id>
    <published>2020-09-21T13:32:24.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><ul><li>DDD基础理论</li><li>代码结构</li></ul><hr><span id="more"></span><h2 id="DDD基础理论"><a href="#DDD基础理论" class="headerlink" title="DDD基础理论"></a>DDD基础理论</h2><p>领域驱动设计</p><p>参考书籍：</p><p><code>领域驱动设计精粹</code></p><p><code>领域驱动设计与模式实战</code></p><h2 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h2><ul><li>SRP(Single responsibility principle)：单一职责原则，一个module只有一个原因修改</li><li>OCP(Open&#x2F;closed principle)：开放-关闭原则，开放扩展，关闭修改</li><li>LSP(Liskov substitution principle)：里氏替换原则，子类型必须能够替换它们的基类型</li><li>ISP(Interface segregation principle)：接口隔离原则，你所依赖的必须是真正使用到的</li><li>DIP(Dependency inversion principle)：依赖导致原则，依赖接口而不是实现（高层不需要知道底层的实现）</li></ul><h2 id="模型演化"><a href="#模型演化" class="headerlink" title="模型演化"></a>模型演化</h2><ul><li>分层架构<br>系统按不同职责组织成有序层次，由于这种划分往往比较容易界定，也算是最常见和最受欢迎的一种架构，有一个说法是：“如果你不知道要用什么架构，那就用它。</li></ul><p>MVC</p><p>缺点：</p><pre><code>+ 底层是基础设施层， 领域层依赖于基础设施层</code></pre><ul><li>依赖倒置</li></ul><p>依赖倒置的原则（DIP）由Robert C. Martin ：</p><pre><code>高层模块不应该依赖于底层模块，两者都应该依赖于抽象抽象不应该依赖于实现细节，实现细节应该依赖于接口</code></pre><p><img src="/images/ddd/di.jpeg"></p><p>事实上已经没有分层概念了。无论高层还是底层，实际只依赖于抽象，整个分层好像被推平了。</p><ul><li>六边形架构&#x2F;整洁架构</li></ul><p><img src="/images/ddd/6bian.jpeg" alt="六边形架构/整洁架构"></p><p>也是一种分层架构，只不过不是上下或左右，而是变成了内部和外部。<br>从外环到内环，软件的层级逐渐升高。<br>外环（low level）依赖内环（high level）。</p><h2 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h2><p><img src="/images/ddd/cengci.png" alt="代码"></p><p><a href="http://git.xianzhongwang.cn:7001/quyu/homedoctor/homedoctor-ddd">代码实例</a> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DDD</span><br><span class="line">├── adapter</span><br><span class="line">│     └── 输出适配器</span><br><span class="line">├── api</span><br><span class="line">│     └── 输入适配器</span><br><span class="line">├── application</span><br><span class="line">│     └── 应用层</span><br><span class="line">├── domain 领域层</span><br><span class="line">│     ├── model</span><br><span class="line">│     │     └── 领域模型层</span><br><span class="line">│     └── service</span><br><span class="line">│         └── 领域服务层</span><br></pre></td></tr></table></figure><h3 id="adapter-输出适配器"><a href="#adapter-输出适配器" class="headerlink" title="adapter 输出适配器"></a>adapter 输出适配器</h3><p>系统内部，具体技术实现；<br>仓库，文档，缓存，消息机制，领域事件发布&#x2F;监听；</p><p>一般如下类型：</p><ul><li>persist</li><li>message</li><li>eventListener</li></ul><h3 id="api-输入适配器"><a href="#api-输入适配器" class="headerlink" title="api 输入适配器"></a>api 输入适配器</h3><ul><li>对外接口，传统 <code>controller</code> <code>API</code> 层, 程序入口，客户端调用；</li></ul><p>一般如下类型：</p><ul><li>controller</li></ul><h3 id="application-应用层"><a href="#application-应用层" class="headerlink" title="application 应用层"></a>application 应用层</h3><p>应用服务，传统 <code>service</code> 层, 一般跟场景（用例）有关。</p><p>一般如下类型：</p><ul><li>handler&#x2F;service  </li><li>command 场景 POJO</li></ul><p>一个场景（用例），对应一个command，对应一个handler</p><h3 id="domain-领域层"><a href="#domain-领域层" class="headerlink" title="domain 领域层"></a>domain 领域层</h3><p>一般如下类型：</p><ul><li>model 领域模型</li><li>service 领域服务</li><li>factory&#x2F;builder 工厂<br>复杂对象构建， 比如 主键ID使用snow或美团leaf</li></ul><h4 id="model-领域模型层"><a href="#model-领域模型层" class="headerlink" title="model 领域模型层"></a>model 领域模型层</h4><p>一般如下类型：</p><ul><li>entity</li><li>repository</li><li>event</li><li>值对象</li></ul><h4 id="service-领域服务层"><a href="#service-领域服务层" class="headerlink" title="service 领域服务层"></a>service 领域服务层</h4><ul><li>协调多个聚合，并且是领域逻辑,不放在应用服务层， 放在领域服务层</li><li>算法，策略，保持实体和值对象的单一原则，可以提炼出来变成领域服务</li><li>访问数据库等外部资源</li></ul><h2 id="方寸之间"><a href="#方寸之间" class="headerlink" title="方寸之间"></a>方寸之间</h2><h3 id="领域服务"><a href="#领域服务" class="headerlink" title="领域服务"></a>领域服务</h3><ul><li><p>当领域遜辑放某-一个聚合里不合适，需要协调多个聚合，但由于是领域逻辑，放在应用服务里不合适的时候，可以放到领域服务里;</p></li><li><p>需要访问数据库等外部资源的业务逻辑，不建议聚合里，可以放到领域服务里</p></li><li><p>有些算法、策略代码，为了保持实体和值对象的职责单- - ，可以提炼出来变成领域服务( 领域服务类的命名不-定都要以Service结尾)</p></li><li><p>不涉及事务处理</p></li></ul><h3 id="富领域模型双刃剑"><a href="#富领域模型双刃剑" class="headerlink" title="富领域模型双刃剑"></a>富领域模型双刃剑</h3><ul><li>好处</li></ul><p>分开对待本质复杂度和偶然复杂度，核心业务逻辑被封装在领域对象里，内聚，容易保持一致性， 且容易维护和扩展。</p><p>此外，容易测试，且代码和测试都可以作为文档。</p><ul><li>坏处</li></ul><p>对象引用多， 内存占用大， 影响吞吐量</p><h3 id="通过聚合在贫富间取得平衡"><a href="#通过聚合在贫富间取得平衡" class="headerlink" title="通过聚合在贫富间取得平衡"></a>通过聚合在贫富间取得平衡</h3><p>聚合是一组相关领域模型的集合,是用来封装业务的不变性。同时强迫大家尽可能的简化领域模型之间的关联关系。在贫富之间寻找平衡。</p><p>聚合的主要原则包括:</p><ul><li><p>聚合是-致性边界，聚合根负责执行业务规则，改变边界内的任一对象的状态都不能违反整个聚合的所有业务规则;</p></li><li><p>聚合根有全局标识，聚合边界内的其他实体只有局部标识，聚合边界外的对象，只能持有聚合根的<code>标识</code>，<code>不能引用聚合根对象</code>，也不能持有聚合内部对象或标识</p></li><li><p>聚合具有整体的生命周期，删除聚合根，聚合内的所有对象都需要删除 </p></li><li><p>只有聚合根能从持久化系统内查询得到，边界内的对象只能从聚合根导航访问</p></li></ul><h3 id="聚合根和数据一致性"><a href="#聚合根和数据一致性" class="headerlink" title="聚合根和数据一致性"></a>聚合根和数据一致性</h3><p>应用服务作为事务一致性边界，一个事务里不能涉及到两个聚合的修改，跨聚合的数据应该使用最终一致。</p><p>但最终一致性成本很高。</p><p>实例代码中，基于内存实现同步的领域事件发布和订阅。这样，实际上两个聚合根的更改基于同一个本地数据库事务。</p><p>但由于使用了事件驱动，在代码层面，两个聚合根的更新是解耦的，在需要最终一致性的时候容易重构。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DDD基础理论&lt;/li&gt;
&lt;li&gt;代码结构&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="ddd" scheme="http://giveme5.cc/categories/ddd/"/>
    
    
    <category term="ddd" scheme="http://giveme5.cc/tags/ddd/"/>
    
  </entry>
  
  <entry>
    <title>spark集群初体验</title>
    <link href="http://giveme5.cc/2020/04/30/hadoop/spark%E9%9B%86%E7%BE%A4%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://giveme5.cc/2020/04/30/hadoop/spark%E9%9B%86%E7%BE%A4%E5%88%9D%E4%BD%93%E9%AA%8C/</id>
    <published>2020-04-30T13:32:24.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><ul><li>spark集群初体验</li></ul><hr><span id="more"></span><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">spark-submit --class.org.apache.spark.examples.SparkPi \</span><br><span class="line">--master yarn \</span><br><span class="line">--mun-executors 1 \</span><br><span class="line">--driver-memory 1g \</span><br><span class="line">--executor-cores 1 \</span><br><span class="line">--conf <span class="string">&quot;spark.app.name=SparkPi&quot;</span> \</span><br><span class="line">/opt/cloudera/ xx .jar</span><br></pre></td></tr></table></figure><p>run-example SparkPi</p><h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><ul><li><p>内存不足，在cm里配置yarn</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn.scheduler.maximum-allocation-mb</span><br><span class="line">yarn.nodemanager.resource.memory-mb</span><br></pre></td></tr></table></figure></li><li><p>dfs</p></li></ul><p>如果直接 root 执行，会有如下错误</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">╰─<span class="comment"># spark-shell</span></span><br><span class="line">Setting default <span class="built_in">log</span> level to <span class="string">&quot;WARN&quot;</span>.</span><br><span class="line">To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).</span><br><span class="line">20/02/27 16:47:23 ERROR spark.SparkContext: Error initializing SparkContext.</span><br><span class="line">org.apache.hadoop.security.AccessControlException: Permission denied: user=root, access=WRITE, inode=<span class="string">&quot;/user&quot;</span>:hdfs:supergroup:drwxr-xr-x</span><br></pre></td></tr></table></figure><p>查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">╰─<span class="comment"># hadoop fs -ls /                                                                                                 1 ↵</span></span><br><span class="line">Found 3 items</span><br><span class="line">drwxr-xr-x   - hbase hbase               0 2020-02-27 15:49 /hbase</span><br><span class="line">drwxrwxrwt   - hdfs  supergroup          0 2020-02-27 01:22 /tmp</span><br><span class="line">drwxr-xr-x   - hdfs  supergroup          0 2020-02-27 01:22 /user</span><br></pre></td></tr></table></figure><p>解决方案<br>You need to have a user home directory on HDFS. Log as the HDFS user and create a home dir for root.<br>其他用户类似。</p><p>hadoop的用户是hdfs， 默认是不能直接登录的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u hdfs hadoop fs -<span class="built_in">mkdir</span> /user/root  </span><br><span class="line">sudo -u hdfs hadoop fs -<span class="built_in">chown</span> root:root /user/root</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">╰─<span class="comment">#  hadoop fs -ls /user</span></span><br><span class="line">Found 6 items</span><br><span class="line">drwxrwxrwx   - mapred hadoop              0 2020-02-27 01:21 /user/history</span><br><span class="line">drwxrwxr-t   - hive   hive                0 2020-02-27 01:21 /user/hive</span><br><span class="line">drwxrwxr-x   - hue    hue                 0 2020-02-27 01:22 /user/hue</span><br><span class="line">drwxr-xr-x   - root   root                0 2020-02-27 17:27 /user/root</span><br><span class="line">drwxr-x--x   - spark  spark               0 2020-02-27 16:59 /user/spark</span><br><span class="line">drwxr-xr-x   - hdfs   supergroup          0 2020-02-27 01:20 /user/yarn</span><br></pre></td></tr></table></figure><p>然后root用户可以执行 <code>spark-shell</code></p><p>其实直接用 spark 用户执行就可以。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">╰─<span class="comment"># sudo -u spark spark-shell</span></span><br><span class="line">Setting default <span class="built_in">log</span> level to <span class="string">&quot;WARN&quot;</span>.</span><br><span class="line">To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).</span><br><span class="line">20/02/27 17:31:33 WARN cluster.YarnSchedulerBackend<span class="variable">$YarnSchedulerEndpoint</span>: Attempted to request executors before the AM has registered!</span><br><span class="line">20/02/27 17:31:33 WARN lineage.LineageWriter: Lineage directory /var/log/spark/lineage doesn<span class="string">&#x27;t exist or is not writable. Lineage for this application will be disabled.</span></span><br><span class="line"><span class="string">Spark context Web UI available at http://master-23:4040</span></span><br><span class="line"><span class="string">Spark context available as &#x27;</span>sc<span class="string">&#x27; (master = yarn, app id = application_1582792452399_0004).</span></span><br><span class="line"><span class="string">Spark session available as &#x27;</span>spark<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">Welcome to</span></span><br><span class="line"><span class="string">      ____              __</span></span><br><span class="line"><span class="string">     / __/__  ___ _____/ /__</span></span><br><span class="line"><span class="string">    _\ \/ _ \/ _ `/ __/  &#x27;</span>_/</span><br><span class="line">   /___/ .__/\_,_/_/ /_/\_\   version 2.4.0-cdh6.3.2</span><br><span class="line">      /_/</span><br><span class="line"></span><br><span class="line">Using Scala version 2.11.12 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_181)</span><br><span class="line">Type <span class="keyword">in</span> expressions to have them evaluated.</span><br><span class="line">Type :<span class="built_in">help</span> <span class="keyword">for</span> more information.</span><br><span class="line"></span><br><span class="line">scala&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/FileSystemShell.html">Hadoop 3.2 文档</a></p><h2 id="RDD"><a href="#RDD" class="headerlink" title="RDD"></a>RDD</h2><p>弹性分布式数据集（Resilient Distribution Dataset）<br>数据集合</p><h3 id="创建RDD"><a href="#创建RDD" class="headerlink" title="创建RDD"></a>创建RDD</h3><ul><li>SparkContext 的 parallelize</li><li>读外部数据（HDFS，消息队列等）</li></ul><p>Pair RDD键值对操作<br><a href="https://blog.csdn.net/u014646662/article/details/84673920">https://blog.csdn.net/u014646662/article/details/84673920</a><br><a href="https://blog.csdn.net/JasonDing1354/article/details/46845585">https://blog.csdn.net/JasonDing1354/article/details/46845585</a></p><h2 id="spark-sql"><a href="#spark-sql" class="headerlink" title="spark sql"></a>spark sql</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;spark集群初体验&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="hadoop" scheme="http://giveme5.cc/categories/hadoop/"/>
    
    
    <category term="bigData" scheme="http://giveme5.cc/tags/bigData/"/>
    
    <category term="hadoop" scheme="http://giveme5.cc/tags/hadoop/"/>
    
    <category term="spark" scheme="http://giveme5.cc/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>cloudera</title>
    <link href="http://giveme5.cc/2020/04/29/hadoop/cdh/"/>
    <id>http://giveme5.cc/2020/04/29/hadoop/cdh/</id>
    <published>2020-04-29T13:32:24.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><ul><li>CM 安装</li><li>CDH 安装</li></ul><p>CDH  Cloudera’s Distribution, including Apache Hadoop。 Cloudera 公司出品。<br>拥有集群自动化安装、中心化管理、集群监控、报警功能的一个工具（软件），使得集群的安装可以从几天的时间缩短为几个小时，运维人数也会从数十人降低到几个人，极大的提高了集群管理的效率。</p><hr><span id="more"></span><h2 id="提前工作"><a href="#提前工作" class="headerlink" title="提前工作"></a>提前工作</h2><h3 id="关闭防火墙，SeLinux"><a href="#关闭防火墙，SeLinux" class="headerlink" title="关闭防火墙，SeLinux"></a>关闭防火墙，SeLinux</h3><h3 id="校准时间"><a href="#校准时间" class="headerlink" title="校准时间"></a>校准时间</h3><p>使用NTP服务 同步时间相关服务器时间<br><a href="https://blog.csdn.net/zonghua521/article/details/78239212">ntpd, ntpdate</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*/20  * * * * /usr/sbin/ntpdate pool.ntp.org&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/crontab &gt; /dev/null</span><br></pre></td></tr></table></figure><h3 id="hostname"><a href="#hostname" class="headerlink" title="hostname"></a>hostname</h3><p>根据不同机器角色设置 hostname， 如下 master</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname master</span><br></pre></td></tr></table></figure><h3 id="hostname-解析"><a href="#hostname-解析" class="headerlink" title="hostname 解析"></a>hostname 解析</h3><p>master slave 都配置好,要和 hostname 匹配， 如下例子：</p><p><code>vim /etc/hosts</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.8.23 master-23</span><br><span class="line">192.168.8.24 slave-24</span><br><span class="line">192.168.8.25 slave-25</span><br></pre></td></tr></table></figure><h3 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h3><ul><li>所有虚机分发 cloudera cm 和 cdh</li><li>所有虚机优化 swappiness 和 透明大页面，本文下部有</li><li>master 安装 cm全部， slave 安装 jdk，cm daemons， cm agent</li><li>所有虚拟机安装zsh（可选）</li></ul><h3 id="公钥登录"><a href="#公钥登录" class="headerlink" title="公钥登录"></a>公钥登录</h3><p>公钥要分发到所有slave机器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_email@your_email.com&quot;</span> -b 4096</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub username@hostname</span><br></pre></td></tr></table></figure><h2 id="cloudera-manager"><a href="#cloudera-manager" class="headerlink" title="cloudera-manager"></a>cloudera-manager</h2><p>使用当前最新版本 <code>6.3.1</code>， 只需要在master上安装。网络原因，可使用 清华的代理 <code>https://cloudera.proxy.ustclug.org/cm6/6.3.1/redhat7/yum/RPMS/x86_64/</code> 。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="手工rpm方式-推荐"><a href="#手工rpm方式-推荐" class="headerlink" title="手工rpm方式 (推荐)"></a>手工rpm方式 (推荐)</h4><ul><li><p>下载如下的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cloudera-manager-agent-6.3.1-1466458.el7.x86_64.rpm</span><br><span class="line">cloudera-manager-daemons-6.3.1-1466458.el7.x86_64.rpm</span><br><span class="line">cloudera-manager-server-6.3.1-1466458.el7.x86_64.rpm</span><br><span class="line">cloudera-manager-server-db-2-6.3.1-1466458.el7.x86_64.rpm</span><br><span class="line">oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>安装<br>到下载目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ./*.rpm</span><br></pre></td></tr></table></figure></li></ul><h4 id="yum方式-看网络"><a href="#yum方式-看网络" class="headerlink" title="yum方式 (看网络)"></a>yum方式 (看网络)</h4><p><a href="https://cloudera.proxy.ustclug.org/cm6/6.3.1/redhat7/yum/cloudera-manager.repo">yum文件</a></p><h4 id="cloudera-manager-installer-bin-安装-看网络"><a href="#cloudera-manager-installer-bin-安装-看网络" class="headerlink" title="cloudera-manager-installer.bin 安装  (看网络)"></a>cloudera-manager-installer.bin 安装  (看网络)</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://cloudera.proxy.ustclug.org/cm6/6.3.1/cloudera-manager-installer.bin</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">chmod</span> u+x cloudera-manager-installer.bin</span><br><span class="line"></span><br><span class="line">$ sudo ./cloudera-manager-installer.bin</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><h4 id="安装完成目录"><a href="#安装完成目录" class="headerlink" title="安装完成目录"></a>安装完成目录</h4><ul><li><p>cdh<br><code>/opt/cloudera/</code></p></li><li><p>jdk<br><code>/usr/java/</code></p></li><li><p>cloudera<br><code>/var/lib/cloudera-scm-*</code></p></li></ul><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>cm 安装成功后,重启系统, 大约 1min,<br>服务为 <code>cloudera-scm-agent.service</code> 和 <code>cloudera-scm-server.service</code><br>localhost:7180 可访问, 初始账户 admin， 密码 admin</p><h3 id="cm-daemons，-cm-agent"><a href="#cm-daemons，-cm-agent" class="headerlink" title="cm daemons， cm agent"></a>cm daemons， cm agent</h3><p>slave 都安装好 jdk，cm daemons， cm agent，<br>可以避免 下载速度慢<br>将 master上的<br>    cloudera-manager-agent-6.3.1-1466458.el7.x86_64.rpm<br>    cloudera-manager-daemons-6.3.1-1466458.el7.x86_64.rpm<br>    oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm<br>copy 到 slave上，像master 一样安装。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y cloudera-manager-daemons-6.3.1-1466458.el7.x86_64.rpm cloudera-manager-agent-6.3.1-1466458.el7.x86_64.rpm oracle-j2sdk1.8-1.8.0+update181-1.x86_64.rpm</span><br></pre></td></tr></table></figure><p>注意：<br>cloudera-scm 必须拥有 &#x2F;opt&#x2F;cloudera 路径的所有权。 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R cloudera-scm:cloudera-scm /opt/cloudera</span><br></pre></td></tr></table></figure><p>安装完成重启系统。</p><h2 id="CDH-6-3-2"><a href="#CDH-6-3-2" class="headerlink" title="CDH 6.3.2"></a>CDH 6.3.2</h2><p>parcels(离线) 方式， 注意一定要检测到 所需的cdh<br>仅需要在master安装</p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>默认是内存数据库，如果上生产，建议还是关系数据库。<br><a href="https://docs.cloudera.com/documentation/enterprise/6/latest/topics/cm_ig_installing_configuring_dbs.html">官方文档</a></p><h4 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a><a href="https://docs.cloudera.com/documentation/enterprise/6/latest/topics/cm_ig_mysql.html#cmig_topic_5_5_3">Mysql</a></h4><h5 id="java-驱动"><a href="#java-驱动" class="headerlink" title="java 驱动"></a>java 驱动</h5><p>可去清华镜像下载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf mysql-connector-java-5.1.46.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/share/java/</span><br><span class="line"><span class="built_in">cd</span> mysql-connector-java-5.1.46</span><br><span class="line"><span class="built_in">cp</span> mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/cloudera/cm/schema/scm_prepare_database.sh -h 192.168.11.229 mysql  --scm-host 192.168.11.220 -u root -P 3306 -p  scm scm</span><br></pre></td></tr></table></figure><p>如果 是本机数据库， -h 和 –扫描-host 去掉<br>依次输入 root 和 scm 密码</p><p>如果存在，删除embedded PostgreSQL properties</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /etc/cloudera-scm-server/db.mgmt.properties</span><br></pre></td></tr></table></figure><h3 id="手工下载-CDH"><a href="#手工下载-CDH" class="headerlink" title="手工下载 CDH"></a>手工下载 CDH</h3><p>官网<br><a href="https://cloudera.proxy.ustclug.org/cdh6">https://cloudera.proxy.ustclug.org/cdh6</a></p><p>国内镜像<br><a href="https://cloudera.proxy.ustclug.org/cdh6/6.3.2/parcels/">https://cloudera.proxy.ustclug.org/cdh6/6.3.2/parcels/</a></p><p>对应操作系统下载文件</p><pre><code>manifest.jsonCDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcelCDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha1CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha256</code></pre><p>仅需上传到 master的目录<code>/opt/cloudera/parcel-repo</code>下, <code>CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha1</code> copy 一份成为 <code>CDH-6.3.2-1.cdh6.3.2.p0.1605554-el7.parcel.sha1</code></p><p>注意：<br>cloudera-scm 必须拥有 &#x2F;opt&#x2F;cloudera 路径的所有权，否则 cloudera manage 会无法识别 CDH。</p><p>一旦出现，如下操作。 如再不能识别，重启master操作系统。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R cloudera-scm:cloudera-scm /opt/cloudera</span><br><span class="line">systemctl stop cloudera-scm-agent.service</span><br><span class="line">systemctl restart cloudera-scm-server.service</span><br><span class="line"><span class="comment"># wait 30s ?</span></span><br><span class="line">systemctl restart cloudera-scm-agent.service</span><br></pre></td></tr></table></figure><p>如果仍然无法识别， </p><h3 id="CM-图形安装"><a href="#CM-图形安装" class="headerlink" title="CM 图形安装"></a>CM 图形安装</h3><p>cloudera express</p><p><img src="/images/hadoop/cm1.png"><br><img src="/images/hadoop/cm2.png"><br><img src="/images/hadoop/cm3.png"><br><img src="/images/hadoop/cm4.png"><br><img src="/images/hadoop/cm5.png"><br><img src="/images/hadoop/cm6.png"><br><img src="/images/hadoop/cm7.png"><br><img src="/images/hadoop/cm8.png"><br><img src="/images/hadoop/cm9.png"><br><img src="/images/hadoop/cm10.png"><br><img src="/images/hadoop/cm11.png"><br>需要解决详细报告内的问题。</p><ul><li><p>swappiness</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line">vm.swappiness=10</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li><li><p>透明大页面压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"></span><br><span class="line">vim /etc/rc.local</span><br><span class="line"># add </span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/hadoop/cm12.png"></p><p>如果 slave 安装异常，<br>解决方法：</p><ul><li>检查 &#x2F;etc&#x2F;hosts</li><li>重启agent<br><code>systemctl restart cloudera-scm-agent</code></li></ul><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Configurator not found</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">slave1: Host with invalid Cloudera Manager GUID is detected</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置 cm_guid</span></span><br><span class="line"><span class="built_in">rm</span> /var/lib/cloudera-scm-agent/cm_guid</span><br><span class="line">systemctl restart cloudera-scm-agent.service</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://segmentfault.com/a/1190000020188183?utm_source=tag-newest">CDH离线搭建</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CM 安装&lt;/li&gt;
&lt;li&gt;CDH 安装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CDH  Cloudera’s Distribution, including Apache Hadoop。 Cloudera 公司出品。&lt;br&gt;拥有集群自动化安装、中心化管理、集群监控、报警功能的一个工具（软件），使得集群的安装可以从几天的时间缩短为几个小时，运维人数也会从数十人降低到几个人，极大的提高了集群管理的效率。&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="hadoop" scheme="http://giveme5.cc/categories/hadoop/"/>
    
    
    <category term="bigData" scheme="http://giveme5.cc/tags/bigData/"/>
    
    <category term="hadoop" scheme="http://giveme5.cc/tags/hadoop/"/>
    
    <category term="cloudera" scheme="http://giveme5.cc/tags/cloudera/"/>
    
    <category term="CDH" scheme="http://giveme5.cc/tags/CDH/"/>
    
  </entry>
  
  <entry>
    <title>Java 范型(generics in java)</title>
    <link href="http://giveme5.cc/2020/04/03/java/generics/"/>
    <id>http://giveme5.cc/2020/04/03/java/generics/</id>
    <published>2020-04-03T14:18:03.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>发现一段牛(装)逼的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;R&gt; Observable&lt;R&gt; <span class="title function_">compose</span><span class="params">(Transformer&lt;? <span class="built_in">super</span> T, ? extends R&gt; transformer)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ((Transformer&lt;T, R&gt;) transformer).call(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常用的泛型含义：</p><ul><li>T - Type（类型）</li><li>R - Result（结果）</li><li>K - Key（键）</li><li>V - Value（值）</li><li>E - Element (元素)</li><li>N - Number（数字）</li><li>? - 通配符, 不确定类型</li><li>extends - 上边界</li><li>super - 下边界</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;发现一段牛(装)逼的代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s</summary>
      
    
    
    
    <category term="java" scheme="http://giveme5.cc/categories/java/"/>
    
    
    <category term="java" scheme="http://giveme5.cc/tags/java/"/>
    
    <category term="generics" scheme="http://giveme5.cc/tags/generics/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 8 密码</title>
    <link href="http://giveme5.cc/2020/03/30/mysql/mysql8/"/>
    <id>http://giveme5.cc/2020/03/30/mysql/mysql8/</id>
    <published>2020-03-30T11:02:02.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Mysql 8 默认采用新的密码认证方式 <code>caching_sha2_password</code> ,<br>如果想使用8以前的认证方式<code> mysql_native_password</code>, 做如下配置</p><ul><li><p>my.cnf</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld] </span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;$password&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><p>参考<br><a href="https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password">caching_sha2_password</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Mysql 8 默认采用新的密码认证方式 &lt;code&gt;caching_sha2_password&lt;/code&gt; ,&lt;br&gt;如果想使用8以前的认证方式&lt;code&gt; mysql_native_password&lt;/code&gt;, 做如下配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;my.c</summary>
      
    
    
    
    <category term="mysql" scheme="http://giveme5.cc/categories/mysql/"/>
    
    
    <category term="Mysql" scheme="http://giveme5.cc/tags/Mysql/"/>
    
    <category term="Mysql8" scheme="http://giveme5.cc/tags/Mysql8/"/>
    
  </entry>
  
  <entry>
    <title>免费https - Let&#39;s Encrypt</title>
    <link href="http://giveme5.cc/2020/03/30/web%20server/https/"/>
    <id>http://giveme5.cc/2020/03/30/web%20server/https/</id>
    <published>2020-03-30T04:32:02.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容<br>免费的Https.</p><p>Let’s Encrypt是一个于2015年三季度推出的数字证书认证机构，旨在以自动化流程消除手动创建和安装证书的复杂流程，并推广使万维网服务器的加密连接无所不在，为安全网站提供免费的SSL&#x2F;TLS证书。</p><p>本文以 <code>Cent OS 7</code> 版本为例说明, 使用 <code>certbot</code> 提供Let’s Encrypt服务 。</p><p><em>更新历史</em><br>无</p><hr><span id="more"></span><h2 id="安装-x2F-初始化"><a href="#安装-x2F-初始化" class="headerlink" title="安装&#x2F;初始化"></a>安装&#x2F;初始化</h2><p><a href="https://certbot.eff.org/">certbot</a><br>选择对应web 服务和 操作系统</p><p>按照说明 一步一步 操作就行.</p><strike>注意 :在 centos 7 中, 安装 certbot 之前 需要 先安装<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-urllib3</span><br><span class="line">yum -y install python-requests</span><br></pre></td></tr></table></figure>新版 不需要了</strike><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot</span><br></pre></td></tr></table></figure><p>可以修改域名证书</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;br&gt;免费的Https.&lt;/p&gt;
&lt;p&gt;Let’s Encrypt是一个于2015年三季度推出的数字证书认证机构，旨在以自动化流程消除手动创建和安装证书的复杂流程，并推广使万维网服务器的加密连接无所不在，为安全网站提供免费的SSL&amp;#x2F;TLS证书。&lt;/p&gt;
&lt;p&gt;本文以 &lt;code&gt;Cent OS 7&lt;/code&gt; 版本为例说明, 使用 &lt;code&gt;certbot&lt;/code&gt; 提供Let’s Encrypt服务 。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="server" scheme="http://giveme5.cc/categories/server/"/>
    
    
    <category term="https" scheme="http://giveme5.cc/tags/https/"/>
    
    <category term="Let&#39;s Encrypt" scheme="http://giveme5.cc/tags/Let-s-Encrypt/"/>
    
  </entry>
  
  <entry>
    <title>分布式批处理框架 - spring boot quartz 集群</title>
    <link href="http://giveme5.cc/2020/03/30/spring/springbootquartzs/"/>
    <id>http://giveme5.cc/2020/03/30/spring/springbootquartzs/</id>
    <published>2020-03-30T04:02:02.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>分布式批处理框架, 采用 <code>spring boot</code> 2,   <code>quartz</code> 2 集群</p><p>本文以 <code>spring boot</code> V2.2.5 版本为例说明。</p><p><em>更新历史</em><br>无</p><hr><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>POM文件大体如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">quartz:</span></span><br><span class="line">    <span class="attr">job-store-type:</span> <span class="string">jdbc</span></span><br><span class="line">    <span class="attr">jdbc:</span></span><br><span class="line">      <span class="attr">initialize-schema:</span> <span class="string">never/embedded/always</span>   <span class="comment"># 第一次必须使用 always, 生成表</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">org:</span></span><br><span class="line">        <span class="attr">quartz:</span></span><br><span class="line">          <span class="attr">jobStore:</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span><br><span class="line">            <span class="attr">driverDelegateClass:</span> <span class="string">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class="line">            <span class="attr">clusterCheckinInterval:</span> <span class="number">5000</span></span><br><span class="line">            <span class="attr">tablePrefix:</span> <span class="string">QRTZ_</span>  <span class="comment"># 辅助表, 表名开头</span></span><br><span class="line">            <span class="attr">isClustered:</span> <span class="literal">true</span> <span class="comment"># 打开集群模式</span></span><br><span class="line">          <span class="attr">scheduler:</span></span><br><span class="line">            <span class="attr">instanceId:</span> <span class="string">AUTO</span></span><br><span class="line">          <span class="attr">threadPool:</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line">            <span class="attr">threadCount:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">threadPriority:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="样例代码"><a href="#样例代码" class="headerlink" title="样例代码"></a>样例代码</h2><ul><li><p>job</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mandalat.ehealth.job;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cc.giveme5.common.service.ComSystemParameterService;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AJob</span> <span class="keyword">implements</span> <span class="title class_">Job</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ComSystemParameterService parameterService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(JobExecutionContext context)</span> &#123;</span><br><span class="line">        parameterService.findAll();</span><br><span class="line"></span><br><span class="line">        System.out.println(port + <span class="string">&quot;--------------------&quot;</span> + LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>job config</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mandalat.ehealth.common.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mandalat.ehealth.job.AJob;</span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JobConfiguration</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JobDetail <span class="title function_">jobADetails</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JobBuilder.newJob(AJob.class).withIdentity(<span class="string">&quot;sampleJobA&quot;</span>)</span><br><span class="line">                .storeDurably().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Trigger <span class="title function_">jobATrigger</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> TriggerBuilder.newTrigger()</span><br><span class="line"></span><br><span class="line">                .forJob(jobADetails())</span><br><span class="line">                .withIdentity(<span class="string">&quot;sampleTriggerA&quot;</span>)</span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/2 * * ? * * *&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>分别在 8080 和 8081 上 启动服务；<br>可以看到只有一台服务调用到了 <code>AJob</code> 中的方法；<br>把这台服务关闭, 5秒后可以看到另一台服务调用到了 <code>AJob</code> 中的方法；<br>说明Quartz 的集群分布式部署成功.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;分布式批处理框架, 采用 &lt;code&gt;spring boot&lt;/code&gt; 2,   &lt;code&gt;quartz&lt;/code&gt; 2 集群&lt;/p&gt;
&lt;p&gt;本文以 &lt;code&gt;spring boot&lt;/code&gt; V2.2.5 版本为例说明。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="spring" scheme="http://giveme5.cc/categories/spring/"/>
    
    
    <category term="spring" scheme="http://giveme5.cc/tags/spring/"/>
    
    <category term="spring boot" scheme="http://giveme5.cc/tags/spring-boot/"/>
    
    <category term="quartzs" scheme="http://giveme5.cc/tags/quartzs/"/>
    
  </entry>
  
  <entry>
    <title>idea 和 eclipse 快捷键</title>
    <link href="http://giveme5.cc/2019/09/23/devEnv/ide/"/>
    <id>http://giveme5.cc/2019/09/23/devEnv/ide/</id>
    <published>2019-09-23T04:44:58.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><p>idea</p><p><em>更新历史</em><br>2019-09-23 增加 idea 远程 debug</p><span id="more"></span><hr><p>eclipse 和 idea 常用快捷键 对比 (转载)</p><table><thead><tr><th>Eclipse</th><th align="center">IntelliJ IDEA</th><th align="left">Description</th></tr></thead><tbody><tr><td>F4</td><td align="center">ctrl+h</td><td align="left">show the type hierarchy</td></tr><tr><td>ctrl+alt+g</td><td align="center">ctrl+alt+F7</td><td align="left">find usages</td></tr><tr><td>ctrl+shift+u</td><td align="center">ctrl+f7</td><td align="left">finds the usages in the same file</td></tr><tr><td>alt+shift+r</td><td align="center">shift+F6</td><td align="left">rename</td></tr><tr><td>ctrl+shift+r</td><td align="center">ctrl+shift+N</td><td align="left">find file &#x2F; open resource</td></tr><tr><td>ctrl+shift+x, j</td><td align="center">ctrl+shift+F10</td><td align="left">run (java program)</td></tr><tr><td>ctrl+shift+o</td><td align="center">ctrl+alt+o</td><td align="left">organize imports</td></tr><tr><td>ctrl+o</td><td align="center">ctrl+F12</td><td align="left">show current file structure &#x2F; outline</td></tr><tr><td>ctrl+shift+m</td><td align="center">ctrl+alt+V</td><td align="left">create local variable refactoring</td></tr><tr><td>syso ctrl+space</td><td align="center">sout ctrl+j</td><td align="left">System.out.println(“”)</td></tr><tr><td>alt + up&#x2F;down</td><td align="center">ctrl + shift + up&#x2F;down</td><td align="left">move lines</td></tr><tr><td>ctrl + d</td><td align="center">ctrl + y</td><td align="left">delete current line</td></tr><tr><td>???</td><td align="center">alt + h</td><td align="left">show subversion history</td></tr><tr><td>ctrl + h</td><td align="center">ctrl + shift + f</td><td align="left">search (find in path)</td></tr><tr><td>“semi” set in window-&gt; preferences</td><td align="center">ctrl + shift + enter</td><td align="left">if I want to add the semi-colon at the end of a statement</td></tr><tr><td>ctrl + 1 or ctrl + shift + l</td><td align="center">ctrl + alt + v</td><td align="left">introduce local variable</td></tr><tr><td>alt + shift + s</td><td align="center">alt + insert</td><td align="left">generate getters &#x2F; setters</td></tr><tr><td>ctrl + shift + f</td><td align="center">ctrl + alt + l</td><td align="left">format code</td></tr><tr><td>ctrl + y</td><td align="center">ctrl + shift + z</td><td align="left">redo</td></tr><tr><td>ctrl + shift + c</td><td align="center">ctrl + &#x2F;</td><td align="left">comment out lines</td></tr><tr><td>ctrl + alt + h</td><td align="center">ctrl + alt + h (same!)</td><td align="left">show call hierarchy</td></tr><tr><td>none ?</td><td align="center">ctrl + alt + f7</td><td align="left">to jump to one of the callers of a method</td></tr><tr><td>ctrl + shift + i</td><td align="center">alt + f8</td><td align="left">evaluate expression (in debugger)</td></tr><tr><td>F3</td><td align="center">ctrl + b</td><td align="left">go to declaration (e.g. go to method)</td></tr><tr><td>ctrl + l</td><td align="center">ctrl + g</td><td align="left">go to line</td></tr><tr><td>alt + &#x2F;</td><td align="center">ctrl + space</td><td align="left">eclipse:Content Assist ; idea:completion 跟输入法冲突，自己改</td></tr><tr><td>？？？</td><td align="center">ctrl + shift + a</td><td align="left">查找所有Intellij的命令</td></tr><tr><td>？？？</td><td align="center">ctrl + shift + alt + t</td><td align="left">重构所有</td></tr></tbody></table><p>Shortcut Translator插件， 安装后，按Ctrl+Shift+K调出快捷键翻译对话框，选定你惯用的IDE keymap和需要学习的keymap，按下惯用keymap的快捷键，即可看到学习keymap上的对应快捷键。</p><h2 id="IDEA-初始化"><a href="#IDEA-初始化" class="headerlink" title="IDEA 初始化"></a>IDEA 初始化</h2><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><ul><li>JReble</li><li>IdeaVim<br>默认开启&#x2F;关闭快捷是 Ctrl+Alt+v， 有冲突，可以改成Shift+Alt+v</li></ul><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul><li>修改 completion ： shift + space</li><li>增加 close all 和 close other</li><li>修改自动完成大小写敏感<br>setting–&gt;Editor–&gt;General–&gt;Code completion : Case sensitive completion 修改为 none</li></ul><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><p>新建好server， before launch ： Maven Goal -》 clean package</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>Live templates<br>增加 java method comment<br>jmc ： &#x2F;**</p></li><li><p>File and Code templates<br>Includs 可以修改成如下内容：</p><pre><code>/*** Created with $&#123;PRODUCT_NAME&#125;.* User: $&#123;USER&#125;* Date: $&#123;DATE&#125;* Time: $&#123;TIME&#125;* description: */</code></pre></li></ul><h3 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h3><ul><li><p>编辑 .properties 文件<br>settting –》  File Encodings –》 Transparent native-to-ascii conversion 打勾</p></li><li><p>限制一行代码的宽度<br>File-&gt;settings-&gt;Code Style-&gt;General中，修改“Right margin (columns)”的值即可改变代码行宽度的限制。<br>自动将代码换行:<br>第一种，在上述的“Right margin (columns)”的下方，有“Wrap when typing reaches right margin”选项，选中它，是什么效果呢？如下图所示，随着输入的字符的增加，当代码宽度到达界线时，IDEA会自动将代码换行。<br>第二种，在File-&gt;settings-&gt;Code Style-&gt;Java中，选中“Wrapping and Braces”选项卡，在“Keep when reformatting”中有一个“Ensure rigth margin is not exceeded”，选中</p></li><li><p>quick doc<br>eclipse 光标放类或方法上， 默认有javaDoc 等 doc 显示；<br>idea 默认没有， 可以用 <code>CTRL + Q</code> 手动显示，或者 <code>setting -&gt; editor -&gt; general</code> 页面， other 部分， 将 <code>show quick documentation</code> 打上勾</p></li></ul><h2 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h2><h3 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h3><ul><li>点击主窗口菜单 Run &#x2F; Edit Configurations，打开“Run&#x2F;Debug Configurations”窗口；</li><li>点击工具栏上的“+”按钮，下拉菜单中选择“Remote”；</li><li>设置 Host 为远程服务器的域名或IP，Port为端口；</li><li>复制命令行参数，<br><code>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8006 </code></li></ul><p><img src="/images/ideaRemote1.png"></p><h3 id="远程服务器"><a href="#远程服务器" class="headerlink" title="远程服务器"></a>远程服务器</h3><ul><li><p>SpringBoot</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8006 -jar test-center.jar</span><br></pre></td></tr></table></figure></li><li><p>Tomcat<br>修改启动脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8006&quot;</span><br></pre></td></tr></table></figure></li></ul><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>本地和远程代码一致</li><li>远程端口开放</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;主要内容&quot;&gt;&lt;a href=&quot;#主要内容&quot; class=&quot;headerlink&quot; title=&quot;主要内容&quot;&gt;&lt;/a&gt;主要内容&lt;/h2&gt;&lt;p&gt;idea&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;2019-09-23 增加 idea 远程 debug&lt;/p&gt;</summary>
    
    
    
    <category term="developEnv" scheme="http://giveme5.cc/categories/developEnv/"/>
    
    
    <category term="idea eclipse 快捷键" scheme="http://giveme5.cc/tags/idea-eclipse-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>spring boot war包</title>
    <link href="http://giveme5.cc/2018/11/21/spring/springBoot-war/"/>
    <id>http://giveme5.cc/2018/11/21/spring/springBoot-war/</id>
    <published>2018-11-21T10:31:21.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>spring boot 构建war包</p><p>本文以 <code>spring boot</code> V2.1.0 版本为例说明。</p><p><em>更新历史</em><br>无</p><hr><span id="more"></span><p><code>spring boot</code> 默认是 可执行的 JAR 包，如果需要构建 war包， 仅需修改如下2个文件</p><ul><li><p>POM.xml<br>在原有基础下 增加 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Application.java<br>继承 <code>SpringBootServletInitializer</code>， 实现方法 <code>configure(SpringApplicationBuilder application)</code><br>类似如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableJpaAuditing</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> <span class="keyword">extends</span> <span class="title class_">SpringBootServletInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> SpringApplicationBuilder <span class="title function_">configure</span><span class="params">(SpringApplicationBuilder application)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> application.sources(Application.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;spring boot 构建war包&lt;/p&gt;
&lt;p&gt;本文以 &lt;code&gt;spring boot&lt;/code&gt; V2.1.0 版本为例说明。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;无&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="spring" scheme="http://giveme5.cc/categories/spring/"/>
    
    
    <category term="spring" scheme="http://giveme5.cc/tags/spring/"/>
    
    <category term="spring boot" scheme="http://giveme5.cc/tags/spring-boot/"/>
    
    <category term="war" scheme="http://giveme5.cc/tags/war/"/>
    
  </entry>
  
  <entry>
    <title>JVM线上调优(二)  CPU调优</title>
    <link href="http://giveme5.cc/2018/11/07/java/javaAnalyzer-cpu/"/>
    <id>http://giveme5.cc/2018/11/07/java/javaAnalyzer-cpu/</id>
    <published>2018-11-07T13:31:21.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>JVM调优的工具和方法 深入浅出，分如下3节介绍，可以解决实际问题。<br>本章解决java线上CPU调优</p><ul><li><p><a href="/2018/11/06/java/javaAnalyzer/">工具介绍</a><br>公欲善其事，必先利其器<br>jps, jstat, jmap, jhat, jstack, jinfo, JConsole, VisualVM, Eclipse Memory Analyzer(MAT)</p></li><li><p><a href="/2018/11/07/java/javaAnalyzer-cpu/">CPU调优</a><br>还我CPU</p></li><li><p><a href="/2018/11/07/java/javaAnalyzer-memory/">Memory调优</a><br>吃我的吐出来</p></li></ul><p><em>更新历史</em></p><span id="more"></span><hr><h2 id="定位线程"><a href="#定位线程" class="headerlink" title="定位线程"></a>定位线程</h2><ul><li><p>TOP命令查看到CPU的占用情况<br>TOP –&gt; P : 按CPU使用率排序<br><img src="/images/jvm/ja_cpu_p.png"></p></li><li><p>具体线程<br>Java是一个多线程应用，进程是由多个线程构成的，上面看到的是这个进程的CPU占用率，导致这个进程CPU偏高的是其中某个或某几个线程，因而我们需要找到这些线程。<br>ps命令查看指定进程的线程情况</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -mp &lt;pid&gt; -o THREAD,tid,time</span><br></pre></td></tr></table></figure><p><img src="/images/jvm/ja_cpu_thread.png"><br>线程tid为 9100 的线程，CPU占用率达到了99.8%， 就是这个线程的问题。</p></li></ul><h2 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h2><p>请出 <code>jstack</code> 分析具体线程。</p><p>** 注意： 进制转换 **<br>ps命令查看到的线程ID 9100 是十进制，<code>jstack</code> 命令输出的线程ID可能是十六进制，使用如下命令转换</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">╰─$ <span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> 9100</span><br><span class="line">238c</span><br></pre></td></tr></table></figure><p>然后使用 <code>jstack</code> 定位具体的问题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">╰─$ jstack 9078|grep 238c -A 15</span><br><span class="line"><span class="string">&quot;Thread-0&quot;</span> <span class="comment">#10 prio=5 os_prio=0 tid=0x00007fbea0821800 nid=0x238c runnable [0x00007fbe8bbfa000]</span></span><br><span class="line">   java.lang.Thread.State: RUNNABLE</span><br><span class="line">        at com.xxx.xxx.MyClassLoader<span class="variable">$1</span>.run(MyClassLoader.java:19)</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="/images/jvm/ja_cpu_source.png"></p><p>最后结合源码检查就ok。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;JVM调优的工具和方法 深入浅出，分如下3节介绍，可以解决实际问题。&lt;br&gt;本章解决java线上CPU调优&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/06/java/javaAnalyzer/&quot;&gt;工具介绍&lt;/a&gt;&lt;br&gt;公欲善其事，必先利其器&lt;br&gt;jps, jstat, jmap, jhat, jstack, jinfo, JConsole, VisualVM, Eclipse Memory Analyzer(MAT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/07/java/javaAnalyzer-cpu/&quot;&gt;CPU调优&lt;/a&gt;&lt;br&gt;还我CPU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/07/java/javaAnalyzer-memory/&quot;&gt;Memory调优&lt;/a&gt;&lt;br&gt;吃我的吐出来&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="http://giveme5.cc/categories/java/"/>
    
    
    <category term="java" scheme="http://giveme5.cc/tags/java/"/>
    
    <category term="CPU调优" scheme="http://giveme5.cc/tags/CPU%E8%B0%83%E4%BC%98/"/>
    
    <category term="jstack" scheme="http://giveme5.cc/tags/jstack/"/>
    
  </entry>
  
  <entry>
    <title>JVM线上调优(三)  内存调优</title>
    <link href="http://giveme5.cc/2018/11/07/java/javaAnalyzer-memory/"/>
    <id>http://giveme5.cc/2018/11/07/java/javaAnalyzer-memory/</id>
    <published>2018-11-07T13:31:21.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>JVM调优的工具和方法 深入浅出，分如下3节介绍，可以解决实际问题。</p><p>本章讨论java线上内存调优</p><ul><li><p><a href="/2018/11/06/java/javaAnalyzer/">工具介绍</a><br>公欲善其事，必先利其器<br>jps, jstat, jmap, jhat, jstack, jinfo, JConsole, VisualVM, Eclipse Memory Analyzer(MAT)</p></li><li><p><a href="/2018/11/07/java/javaAnalyzer-cpu/">CPU调优</a><br>还我CPU</p></li><li><p><a href="/2018/11/07/java/javaAnalyzer-memory/">Memory调优</a><br>吃我的吐出来</p></li></ul><p><em>更新历史</em></p><span id="more"></span><hr><p>Java应用占用太多内存也有可能的确是内存硬件不足或JVM设置的太小，记得最后考虑下。</p><p>本文主要讨论的是Java内存泄漏。</p><h2 id="泄漏特征"><a href="#泄漏特征" class="headerlink" title="泄漏特征"></a>泄漏特征</h2><p>出现如下情况之一，就需要检查了</p><ul><li>OOM Out-of-Memory</li><li>堆(老年代)&#x2F;方法区 不停地增长，频繁FullGC</li><li>不明的crash</li><li>数据集越大，性能越低</li></ul><h2 id="泄漏原因"><a href="#泄漏原因" class="headerlink" title="泄漏原因"></a>泄漏原因</h2><ul><li><p>File&#x2F;Text buffers 等资源没关闭</p></li><li><p>静态集合类引用<br>静态变量的生命周期和应用程序一致，他们所引用的所有的对象也不能被释放。</p></li><li><p>监听器<br>只增加监听器，不删除</p></li><li><p>各种连接没有释放</p></li><li><p>单例模式<br>单例对象在被初始化后将在JVM的整个生命周期中存在，单例对象持有外部对象的引用，那么这个外部对象将不能被jvm正常回收</p></li><li><p>内部类和外部模块等的引用<br>非静态内部类的对象会隐式强引用其外围对象，所以在内部类未释放时，外围对象也不会被释放，从而造成内存泄漏。</p></li><li><p>集合中的可变对象修改<br>一般是HashSet, HashMap, 主键的key的hashCode变化以后，添加或者删除都是映射到不同的桶中。所以对于HashSet或者HashMap的Key，都应该是不可变类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ** 改变了 key **</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name.hashCode() + age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Set&lt;Person&gt; persons = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;AAAA&quot;</span>,  <span class="number">1</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;BBBB&quot;</span>,  <span class="number">2</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;CCCC&quot;</span>, <span class="number">3</span>);</span><br><span class="line">        persons.add(p1);</span><br><span class="line">        persons.add(p2);</span><br><span class="line">        persons.add(p3);</span><br><span class="line">        System.out.println(<span class="string">&quot;size:&quot;</span> + persons.size()); <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">        p3.setAge(<span class="number">31</span>); <span class="comment">// 修改属性。</span></span><br><span class="line">        persons.remove(p3); <span class="comment">// 移除不掉.</span></span><br><span class="line">        persons.add(p3); <span class="comment">// 添加成功.</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;size:&quot;</span> + persons.size()); <span class="comment">// 4</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="OOM"><a href="#OOM" class="headerlink" title="OOM"></a>OOM</h3><p>java启动加入<code>-XX:+HeapDumpOnOutOfMemoryError</code>，发生OOM时自动生成dump文件<br>    java … -XX:+HeapDumpOnOutOfMemoryError  -XX:HeapDumpPath&#x3D;.&#x2F;oom.hprof</p><p>发生OOM异常时需要对该文件进行分析。把oom.hprof 下载到开发环境，使用 <code>MAT</code> 分析。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><p><code>jps</code> 找到java进程ID[pid]</p></li><li><p>top -p [pid] 查看内存使用情况</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">╰─$ top -p 14986</span><br><span class="line">top - 17:27:51 up 29 days,  7:59,  6 <span class="built_in">users</span>,  load average: 1.27, 0.76, 0.77</span><br><span class="line">Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  8.8 us,  7.3 sy,  0.0 ni, 83.4 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.5 si,  0.0 st</span><br><span class="line">KiB Mem : 16287752 total,  5915300 free,  6235960 used,  4136492 buff/cache</span><br><span class="line">KiB Swap: 16784380 total, 16588028 free,   196352 used.  9302212 avail Mem </span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                                                                                                                                      </span><br><span class="line">14986 sam       20   0 5682796 2.078g  51756 S 2.000 13.38 451:02.04 java                                                                                                                                         </span><br></pre></td></tr></table></figure></li><li><p>FullGC情况<br><code>jstat -gcutil [pid] 3s</code> 每3s的GC情况，主要看 FGC</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">╰─$ jstat -gcutil 14986 3s</span><br><span class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT    CGC    CGCT     GCT   </span><br><span class="line">  0.00  51.09   9.93  61.42  93.53  90.33   2961   45.827   416  304.043     -        -  349.870</span><br><span class="line">  0.00  51.09   9.96  61.42  93.53  90.33   2961   45.827   416  304.043     -        -  349.870</span><br><span class="line">  0.00  51.09  10.18  61.42  93.53  90.33   2961   45.827   416  304.043     -        -  349.870</span><br><span class="line">  0.00  51.09  10.34  61.42  93.53  90.33   2961   45.827   416  304.043     -        -  349.870</span><br><span class="line">  0.00  51.09  11.28  61.42  93.53  90.33   2961   45.827   416  304.043     -        -  349.870</span><br><span class="line">  。。。</span><br></pre></td></tr></table></figure></li><li><p>jmap<br>查看目前的各种类型的对象创建数目和所占用内存</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">╰─$ jmap -histo:live 14986|more</span><br><span class="line"></span><br><span class="line"> num     <span class="comment">#instances         #bytes  class name</span></span><br><span class="line">----------------------------------------------</span><br><span class="line">   1:        514181       53559808  [C</span><br><span class="line">   2:         90742       48738768  [B</span><br><span class="line">   3:         76202       17773512  [I</span><br><span class="line">   4:        152743       13160544  [Ljava.lang.Object;</span><br><span class="line">   5:        509711       12233064  java.lang.String</span><br><span class="line">   6:         83468        9177120  java.lang.Class</span><br><span class="line">   7:        117955        3774560  java.util.HashMap<span class="variable">$Node</span></span><br><span class="line">   8:        100076        3202432  java.util.concurrent.ConcurrentHashMap<span class="variable">$Node</span></span><br><span class="line">   9:         11155        2562688  [J</span><br><span class="line">  10:         15235        2375912  [Ljava.util.HashMap<span class="variable">$Node</span>;</span><br><span class="line">  11:         73180        2341760  com.intellij.util.text.ByteArrayCharSequence</span><br><span class="line">。。。。</span><br></pre></td></tr></table></figure><p>还可以生成JVM的内存dump文件，下载到本地使用 <code>MAT</code> 分析<br>  jmap -dump:format&#x3D;b,file&#x3D;文件名 [pid]</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;JVM调优的工具和方法 深入浅出，分如下3节介绍，可以解决实际问题。&lt;/p&gt;
&lt;p&gt;本章讨论java线上内存调优&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/06/java/javaAnalyzer/&quot;&gt;工具介绍&lt;/a&gt;&lt;br&gt;公欲善其事，必先利其器&lt;br&gt;jps, jstat, jmap, jhat, jstack, jinfo, JConsole, VisualVM, Eclipse Memory Analyzer(MAT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/07/java/javaAnalyzer-cpu/&quot;&gt;CPU调优&lt;/a&gt;&lt;br&gt;还我CPU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/07/java/javaAnalyzer-memory/&quot;&gt;Memory调优&lt;/a&gt;&lt;br&gt;吃我的吐出来&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="http://giveme5.cc/categories/java/"/>
    
    
    <category term="java" scheme="http://giveme5.cc/tags/java/"/>
    
    <category term="内存泄漏" scheme="http://giveme5.cc/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/"/>
    
    <category term="内存调优" scheme="http://giveme5.cc/tags/%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>JVM线上调优(一) 工具介绍</title>
    <link href="http://giveme5.cc/2018/11/06/java/javaAnalyzer/"/>
    <id>http://giveme5.cc/2018/11/06/java/javaAnalyzer/</id>
    <published>2018-11-06T13:31:21.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p>JVM调优的工具和方法 深入浅出，分如下3节介绍，可以解决实际问题。</p><p>本章首先介绍各种倚天剑和屠龙刀<br>（致敬 金庸大大）</p><ul><li><p><a href="/2018/11/06/java/javaAnalyzer/">工具介绍</a><br>公欲善其事，必先利其器<br>jps, jstat, jmap, jhat, jstack, jinfo, JConsole, VisualVM, Eclipse Memory Analyzer(MAT)</p></li><li><p><a href="/2018/11/07/java/javaAnalyzer-cpu/">CPU调优</a><br>还我CPU</p></li><li><p><a href="/2018/11/07/java/javaAnalyzer-memory/">Memory调优</a><br>吃我的吐出来</p></li></ul><p><em>更新历史</em></p><span id="more"></span><hr><p>TIPs： 以下命令都尽量在启动JVM的用户环境下使用</p><h2 id="jps"><a href="#jps" class="headerlink" title="jps"></a>jps</h2><p>JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程。</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><pre><code>jps [-q] [-mlvV] [&lt;hostid&gt;]</code></pre><p>参数都非必须</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><pre><code>-q : 只输出LVMID-l : 输出主类全名或jar路径-m : 输出JVM启动时传递给main()的参数-v : 输出JVM启动时显示指定的JVM参数</code></pre><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><pre><code>╰─$ jps -l   15346 org.jetbrains.idea.maven.server.RemoteMavenServer15527 org.jetbrains.jps.cmdline.Launcher14986 com.intellij.idea.Main30074 jdk.jcmd/sun.tools.jps.Jps18941 org.jetbrains.jps.cmdline.Launcher</code></pre><h2 id="jstat-性能分析"><a href="#jstat-性能分析" class="headerlink" title="jstat 性能分析"></a>jstat 性能分析</h2><p>jstat(JVM statistics Monitoring)是用于监视虚拟机运行时状态信息的命令，类装载、内存、垃圾收集、JIT编译等数据</p><h3 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h3><pre><code>jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]</code></pre><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><pre><code>[option] : 操作参数vmid : 本地虚拟机进程ID[interval] : 连续输出的时间间隔[count] : 连续输出的次数</code></pre><h4 id="参数一览"><a href="#参数一览" class="headerlink" title="参数一览"></a>参数一览</h4><style>table th:first-of-type {    width: 20%;}</style><table><thead><tr><th>Option</th><th>解释</th></tr></thead><tbody><tr><td>gc</td><td>垃圾回收堆的行为统计。Statistics of the behavior of the garbage collected heap.</td></tr><tr><td>class</td><td>class loader的行为统计。Statistics on the behavior of the class loader.</td></tr><tr><td>compiler</td><td>HotSpt JIT编译器行为统计。Statistics of the behavior of the HotSpot Just-in-Time compiler.</td></tr><tr><td>gccapacity</td><td>各个垃圾回收代容量(young,old,perm)和他们相应的空间统计。Statistics of the capacities of the generations and their corresponding spaces.</td></tr><tr><td>gcutil</td><td>垃圾回收统计概述。Summary of garbage collection statistics.</td></tr><tr><td>gccause</td><td>垃圾收集统计概述（同-gcutil），附加最近两次垃圾回收事件的原因。Summary of garbage collection statistics (same as -gcutil), with the cause of the last and</td></tr><tr><td>gcnew</td><td>新生代行为统计。Statistics of the behavior of the new generation.</td></tr><tr><td>gcnewcapacity</td><td>新生代与其相应的内存空间的统计。Statistics of the sizes of the new generations and its corresponding spaces.</td></tr><tr><td>gcold</td><td>年老代和永生代行为统计。Statistics of the behavior of the old and permanent generations.</td></tr><tr><td>gcoldcapacity</td><td>年老代行为统计。Statistics of the sizes of the old generation.</td></tr><tr><td>gcpermcapacity</td><td>永生代行为统计。Statistics of the sizes of the permanent generation.</td></tr><tr><td>printcompilation</td><td>HotSpot编译方法统计。HotSpot compilation method statistics.</td></tr></tbody></table><p><code>-gc</code><br>常用命令 垃圾回收堆的行为统计</p><pre><code>╰─# jstat -gc 15490 3sS0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT   8192.0 33792.0 8181.8  0.0   724992.0 592657.6  215040.0   81474.7   90880.0 86753.7 11520.0 10764.0     20    0.625   3      0.365    0.9908192.0 33792.0 8181.8  0.0   724992.0 594107.5  215040.0   81474.7   90880.0 86753.7 11520.0 10764.0     20    0.625   3      0.365    0.9908192.0 33792.0 8181.8  0.0   724992.0 594455.2  215040.0   81474.7   90880.0 86753.7 11520.0 10764.0     20    0.625   3      0.365    0.9908192.0 33792.0 8181.8  0.0   724992.0 595905.2  215040.0   81474.7   90880.0 86753.7 11520.0 10764.0     20    0.625   3      0.365    0.990</code></pre><p><strong>C即Capacity 总容量，U即Used 已使用的容量</strong></p><ul><li>S0C：第一个幸存区的大小</li><li>S1C：第二个幸存区的大小</li><li>S0U：第一个幸存区的使用大小</li><li>S1U：第二个幸存区的使用大小</li><li>EC：伊甸园区的大小</li><li>EU：伊甸园区的使用大小</li><li>OC：老年代大小</li><li>OU：老年代使用大小</li><li>MC：方法区大小</li><li>MU：方法区使用大小</li><li>CCSC:压缩类空间大小</li><li>CCSU:压缩类空间使用大小</li><li>YGC：年轻代垃圾回收次数</li><li>YGCT：年轻代垃圾回收消耗时间</li><li>FGC：老年代垃圾回收次数</li><li>FGCT：老年代垃圾回收消耗时间</li><li>GCT：垃圾回收消耗总时间</li></ul><p>更多可参考<a href="https://app.yinxiang.com/shard/s70/nl/17973191/9a8fdbd4-6a6b-46fb-8c70-babd70a02fcb">jstat</a> <a href="https://blog.csdn.net/maosijunzi/article/details/46049117">java高分局之jstat命令使用</a></p><h2 id="jinfo"><a href="#jinfo" class="headerlink" title="jinfo"></a>jinfo</h2><p>jinfo(JVM Configuration info)实时查看和调整虚拟机运行参数</p><h3 id="命令-2"><a href="#命令-2" class="headerlink" title="命令"></a>命令</h3><pre><code>jinfo &lt;option&gt; &lt;pid&gt;</code></pre><h3 id="option"><a href="#option" class="headerlink" title="option"></a>option</h3><pre><code>-flag : 输出指定args参数的值-flags : 不需要args参数，输出所有JVM参数的值-sysprops : 输出系统属性，等同于System.getProperties()</code></pre><h2 id="jmap-查看内存"><a href="#jmap-查看内存" class="headerlink" title="jmap 查看内存"></a>jmap 查看内存</h2><p>jmap(JVM Memory Map)命令用于生成heap dump文件，如果不使用这个命令，还可以使用-XX:+HeapDumpOnOutOfMemoryError参数来让虚拟机出现OOM的时候自动生成dump文件。<br>又或者在Linux系统下通过Kill-3命令发送进程退出信号“吓唬”一下虚拟机，也能拿到dump文件。<br>jmap不仅能生成dump文件，还可以查询finalize执行队列、Java堆和永久代的详细信息，如当前使用率、当前使用的是哪种收集器等。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>openjdk 需要 安装 <code>debuginfo</code>，版本需要和openjdk 一致</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update java-1.8.0-openjdk.x86_64</span><br><span class="line">yum --enablerepo=<span class="string">&quot;*-debug*&quot;</span> install java-1.8.0-openjdk-debuginfo</span><br></pre></td></tr></table></figure><p>否则 异常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- unknown CollectedHeap type : class sun.jvm.hotspot.gc_interface.CollectedHeap</span><br></pre></td></tr></table></figure><h3 id="命令-3"><a href="#命令-3" class="headerlink" title="命令"></a>命令</h3><pre><code>jmap [option] pid</code></pre><h3 id="option参数"><a href="#option参数" class="headerlink" title="option参数"></a>option参数</h3><pre><code>dump : 生成堆转储快照finalizerinfo : 显示在F-Queue队列等待Finalizer线程执行finalizer方法的对象heap : 显示Java堆详细信息histo : 显示堆中对象的统计信息clstats : 类加载的统计信息F : 当-dump没有响应时，强制生成dump快照</code></pre><h3 id="例-1"><a href="#例-1" class="headerlink" title="例"></a>例</h3><ul><li>-dump<br>  jmap -dump:live,format&#x3D;b,file&#x3D;dump.hprof $pid</li></ul><p>dump.hprof这个后缀是为了后续可以直接用MAT(Memory Anlysis Tool)打开。</p><ul><li><p>-finalizerinfo<br>打印等待回收对象的信息</p></li><li><p>-heap<br>打印heap的概要信息，GC使用的算法，heap的配置及wise heap的使用情况,可以用此来判断内存目前的使用情况以及垃圾回收情况</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">╰─<span class="comment"># jmap -heap 15490</span></span><br><span class="line">Attaching to process ID 15490, please <span class="built_in">wait</span>...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.191-b12</span><br><span class="line"></span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Parallel GC with 2 thread(s) //GC 方式  </span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">    MinHeapFreeRatio         = 0 //对应jvm启动参数-XX:MinHeapFreeRatio设置JVM堆最小空闲比率(default 40)</span><br><span class="line">    MaxHeapFreeRatio         = 100 //对应jvm启动参数 -XX:MaxHeapFreeRatio设置JVM堆最大空闲比率(default 70)</span><br><span class="line">    MaxHeapSize              = 4164943872 (3972.0MB) //对应jvm启动参数-XX:MaxHeapSize=设置JVM堆的最大大小</span><br><span class="line">    NewSize                  = 87031808 (83.0MB) //对应jvm启动参数-XX:NewSize=设置JVM堆的‘新生代’的默认大小</span><br><span class="line">    MaxNewSize               = 1388314624 (1324.0MB) //对应jvm启动参数-XX:MaxNewSize=设置JVM堆的‘新生代’的最大大小</span><br><span class="line">    OldSize                  = 175112192 (167.0MB) //对应jvm启动参数-XX:OldSize=&lt;value&gt;:设置JVM堆的‘老生代’的大小</span><br><span class="line">    NewRatio                 = 2 //对应jvm启动参数-XX:NewRatio=:‘新生代’和‘老生代’的大小比率</span><br><span class="line">    SurvivorRatio            = 8 //对应jvm启动参数-XX:SurvivorRatio=设置年轻代中Eden区与Survivor区的大小比值 </span><br><span class="line">    MetaspaceSize            = 21807104 (20.796875MB) //对应jvm启动参数-XX:MetaspaceSize=&lt;value&gt;:设置JVM堆的‘方法区’的初始大小</span><br><span class="line">    CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">    MaxMetaspaceSize         = 17592186044415 MB //对应jvm启动参数-XX:MaxMetaspaceSize=&lt;value&gt;:设置JVM堆的‘方法区’的最大大小</span><br><span class="line">    G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage: //堆内存使用情况</span><br><span class="line">PS Young Generation</span><br><span class="line">Eden Space: //Eden区内存分布</span><br><span class="line">    capacity = 742391808 (708.0MB) //Eden区总容量</span><br><span class="line">    used     = 626604800 (597.576904296875MB) //Eden区已使用</span><br><span class="line">    free     = 115787008 (110.423095703125MB) //Eden区剩余容量</span><br><span class="line">    84.40351755605579% used //Eden区使用比率</span><br><span class="line">From Space: //其中一个Survivor区的内存分布</span><br><span class="line">    capacity = 8388608 (8.0MB)</span><br><span class="line">    used     = 8378128 (7.9900054931640625MB)</span><br><span class="line">    free     = 10480 (0.0099945068359375MB)</span><br><span class="line">    99.87506866455078% used</span><br><span class="line">To Space: //另一个Survivor区的内存分布</span><br><span class="line">    capacity = 34603008 (33.0MB)</span><br><span class="line">    used     = 0 (0.0MB)</span><br><span class="line">    free     = 34603008 (33.0MB)</span><br><span class="line">    0.0% used</span><br><span class="line">PS Old Generation //当前的Old区内存分布</span><br><span class="line">    capacity = 220200960 (210.0MB)</span><br><span class="line">    used     = 83430072 (79.56511688232422MB)</span><br><span class="line">    free     = 136770888 (130.43488311767578MB)</span><br><span class="line">    37.88815089634487% used</span><br><span class="line"></span><br><span class="line">38773 interned Strings occupying 4270344 bytes.</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>-histo<br>打印堆的对象统计，包括对象数、内存大小等等 （因为在dump:live前会进行full gc，如果带上live则只统计活对象，因此不加live的堆大小要大于加live堆的大小 ）</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ jmap -histo:live 15490 | more</span><br><span class="line"></span><br><span class="line"> num     <span class="comment">#instances         #bytes  class name</span></span><br><span class="line">----------------------------------------------</span><br><span class="line">   1:        137190       15505768  [C</span><br><span class="line">   2:         10772        8598936  [B</span><br><span class="line">   3:        131166        3147984  java.lang.String</span><br><span class="line">   4:         29783        2620904  java.lang.reflect.Method</span><br><span class="line">   5:         36792        2354688  com.mysql.jdbc.ConnectionPropertiesImpl<span class="variable">$BooleanConnectionProperty</span></span><br><span class="line">   6:         72596        2323072  java.util.concurrent.ConcurrentHashMap<span class="variable">$Node</span></span><br><span class="line">   7:         17598        1948272  java.lang.Class</span><br><span class="line">   8:         14682        1766000  [Ljava.util.HashMap<span class="variable">$Node</span>;</span><br><span class="line">   9:         55163        1765216  java.util.Hashtable<span class="variable">$Entry</span></span><br><span class="line">  10:         13793        1732072  [I</span><br><span class="line">  ....</span><br></pre></td></tr></table></figure><p>  xml class name是对象类型，说明如下：</p><pre><code>  B  byte  C  char  D  double  F  float  I  int  J  long  Z  boolean  [  数组，如[I表示int[]  [L+类名 其他对象</code></pre></li><li><p>-clstats<br>打印Java堆内存的类加载器的统计信息。对于每个类加载器而言，它的名称、活跃度、地址、父类加载器、它所加载的类的数量和大小都会被打印。此外，包含的字符串数量和大小也会被打印。</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jmap -clstats 15490</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="jhat"><a href="#jhat" class="headerlink" title="jhat"></a>jhat</h2><p>jhat(JVM Heap Analysis Tool)命令是与jmap搭配使用，用来分析jmap生成的dump。<br>千万下载dump文件到开发环境进行分析。<br>推荐使用 Eclipse Memory Analyzer(MAT)</p><h2 id="jstack-查看线程"><a href="#jstack-查看线程" class="headerlink" title="jstack 查看线程"></a>jstack 查看线程</h2><p>jstack（Stack Trace for Java）用于生成虚拟机当前时刻的线程快照（一般称为threaddump或者javacore文件）。<br>线程快照是当前java虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是<strong>定位线程出现长时间停顿</strong>的原因，如<strong>线程间死锁、死循环、请求外部资源</strong>等。<br>如果现在运行的java程序呈现停顿状态，jstack是非常有用的。</p><h3 id="命令-4"><a href="#命令-4" class="headerlink" title="命令"></a>命令</h3><pre><code>jstack [-l][-e] &lt;pid&gt;</code></pre><h3 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h3><pre><code>-l  long listing. Prints additional information about locks-e  extended listing. Prints additional information about threads</code></pre><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>参考 <a href="http://www.hollischuang.com/archives/110">jstack</a></p><hr><p>以下都是可视化的工具</p><h2 id="JConsole"><a href="#JConsole" class="headerlink" title="JConsole"></a>JConsole</h2><p>JConsole（Java Monitoring and Management Console）是一种基于JMX的可视化监视、 管理工具</p><h2 id="VisualVM"><a href="#VisualVM" class="headerlink" title="VisualVM"></a>VisualVM</h2><p>大名鼎鼎的 VisualVM， 基于NetBeans平台开发，通过插件扩展支持，VisualVM可以做到</p><ul><li>显示虚拟机进程以及进程的配置、 环境信息（jps、 jinfo）。</li><li>监视应用程序的CPU、 GC、 堆、 方法区以及线程的信息（jstat、 jstack）。</li><li>dump以及分析堆转储快照（jmap、 jhat）。</li><li>方法级的程序运行性能分析，找出被调用最多、 运行时间最长的方法。</li><li>离线程序快照：收集程序的运行时配置、线程dump、内存dump等信息建立一个快照，可以将快照发送开发者处进行Bug反馈。</li></ul><p><img src="/images/jvm/ja_visualvm.jpg"></p><h2 id="Eclipse-Memory-Analyzer-MAT"><a href="#Eclipse-Memory-Analyzer-MAT" class="headerlink" title="Eclipse Memory Analyzer(MAT)"></a><a href="https://www.eclipse.org/mat/">Eclipse Memory Analyzer(MAT)</a></h2><p>Eclipse 出品，MAT可以对堆dump的文件进行分析，可以去detail页看线程各个对象的使用数目等情况。</p><ul><li>内存泄露报表，自动检查可能存在内存泄露的对象，通过报表展示存活的对象以及为什么他们没有被垃圾收集；</li><li>对象报表，对可颖对象的分析，如字符串是否定义重了，空的collection、finalizer以及弱引用等。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;JVM调优的工具和方法 深入浅出，分如下3节介绍，可以解决实际问题。&lt;/p&gt;
&lt;p&gt;本章首先介绍各种倚天剑和屠龙刀&lt;br&gt;（致敬 金庸大大）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/06/java/javaAnalyzer/&quot;&gt;工具介绍&lt;/a&gt;&lt;br&gt;公欲善其事，必先利其器&lt;br&gt;jps, jstat, jmap, jhat, jstack, jinfo, JConsole, VisualVM, Eclipse Memory Analyzer(MAT)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/07/java/javaAnalyzer-cpu/&quot;&gt;CPU调优&lt;/a&gt;&lt;br&gt;还我CPU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2018/11/07/java/javaAnalyzer-memory/&quot;&gt;Memory调优&lt;/a&gt;&lt;br&gt;吃我的吐出来&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="http://giveme5.cc/categories/java/"/>
    
    
    <category term="java" scheme="http://giveme5.cc/tags/java/"/>
    
    <category term="jstack" scheme="http://giveme5.cc/tags/jstack/"/>
    
    <category term="jvm" scheme="http://giveme5.cc/tags/jvm/"/>
    
    <category term="jps" scheme="http://giveme5.cc/tags/jps/"/>
    
    <category term="jstat" scheme="http://giveme5.cc/tags/jstat/"/>
    
    <category term="jmap" scheme="http://giveme5.cc/tags/jmap/"/>
    
    <category term="jhat" scheme="http://giveme5.cc/tags/jhat/"/>
    
    <category term="jinfo" scheme="http://giveme5.cc/tags/jinfo/"/>
    
    <category term="JConsole" scheme="http://giveme5.cc/tags/JConsole/"/>
    
    <category term="VisualVM" scheme="http://giveme5.cc/tags/VisualVM/"/>
    
    <category term="MAT" scheme="http://giveme5.cc/tags/MAT/"/>
    
  </entry>
  
  <entry>
    <title>swagger springfox rest接口文档</title>
    <link href="http://giveme5.cc/2018/11/04/spring/springfox-md/"/>
    <id>http://giveme5.cc/2018/11/04/spring/springfox-md/</id>
    <published>2018-11-04T10:31:21.000Z</published>
    <updated>2022-12-08T03:19:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要内容</p><p><code>swagger</code>(<code>springfox</code>) 可帮助开发人员设计，构建，记录和使用RESTful Web服务, 使后台开发人员与移动端开发人员更好的对接.<br>大多数用户通过Swagger UI工具可很简单识别和使用Swagger。</p><p>最大优点： 接口开发人员不用另外写接口文档，代码注释中写上swagger相关的注释就可以自动生成接口文档；<br>最大缺点： 对源代码侵入比较严重。</p><p>本文以 <code>springfox-swagger2</code> V2.9.2 版本为例说明。</p><p>末了，还有个稍重量级竞品 <a href="https://github.com/thx/rap2-delos">RAP(阿里妈妈出品) </a> ， 感兴趣的可以去玩玩。</p><p><em>更新历史</em><br>+2018-11-04: 增加swagger注解具体说明</p><span id="more"></span><h2 id="Maven-依赖"><a href="#Maven-依赖" class="headerlink" title="Maven 依赖"></a>Maven 依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="swagger2-配置文件"><a href="#swagger2-配置文件" class="headerlink" title="swagger2 配置文件"></a>swagger2 配置文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="meta">@ConditionalOnExpression(&quot;$&#123;giveme5.swagger.enable:true&#125;&quot;)</span> <span class="comment">//是否启用Swagger的判断</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟接口的认证授权</span></span><br><span class="line"><span class="comment">     * 配合 <span class="doctag">@ApiOperation</span>(authorizations = &#123; <span class="doctag">@Authorization</span>(value=&quot;apiKey&quot;) &#125;)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ApiKey <span class="title function_">apiKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiKey</span>(<span class="string">&quot;apiKey&quot;</span>, <span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">createRestApi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .securitySchemes(Arrays.asList(apiKey()))</span><br><span class="line">                .select()</span><br><span class="line">                    .apis(RequestHandlerSelectors.withClassAnnotation(Api.class))</span><br><span class="line">                    .paths(PathSelectors.ant(<span class="string">&quot;/app/**&quot;</span>)) <span class="comment">// 只对 url 匹配 /app/** 的生效</span></span><br><span class="line">                    .build()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">apiInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;springfox 大标题&quot;</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">&quot;http://giveme5.cc/&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;springmvc swagger2&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;sam&quot;</span>, <span class="string">&quot;http://giveme5.cc/&quot;</span>, <span class="string">&quot;xxxxxxxxxxxx@163.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Spring-配置"><a href="#Spring-配置" class="headerlink" title="Spring 配置"></a>Spring 配置</h2><h3 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h3><p>Springboot 可以直接使用</p><h3 id="SpringMvc-配置"><a href="#SpringMvc-配置" class="headerlink" title="SpringMvc 配置"></a>SpringMvc 配置</h3><ul><li><p>java based config</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@EnableSpringDataWebSupport</span></span><br><span class="line"><span class="meta">@Import(</span></span><br><span class="line"><span class="meta">&#123; SwaggerConfig.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationConfiguration</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurerAdapter</span></span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Maps resources path to webapp/resources</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span></span><br><span class="line">    &#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;swagger-ui.html&quot;</span>).addResourceLocations(</span><br><span class="line">                <span class="string">&quot;classpath:/META-INF/resources/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/webjars/**&quot;</span>).addResourceLocations(<span class="string">&quot;classpath:/META&quot;</span> +</span><br><span class="line">                <span class="string">&quot;-INF/resources/webjars/&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>xml based config</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;bean class=&quot;com.springfox.config.SwaggerConfig&quot; /&gt; 使用bean申明可以去掉@configuration--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扫描@configuration注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.springfox.config&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置静态资源访问--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;swagger-ui.html&quot;</span> <span class="attr">location</span>=<span class="string">&quot;classpath:/META-INF/resources/&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/webjars/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="接口举例"><a href="#接口举例" class="headerlink" title="接口举例"></a>接口举例</h2><ul><li><p>controller</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类功能说明：注册用户 controller</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/app&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &#123;&quot;用户接口&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerAppController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第三方登录 - 刷新</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token     QQ授权后的access_token 或 微信的 refresh_token 或 微博的 refresh_token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginType 1: QQ； 2: 微信； 3：微博</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 手机号码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> valid 校验码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/s/login/refresh&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;第三方登录 - 刷新&quot;, response = ThirdLoginToken.class,</span></span><br><span class="line"><span class="meta">            notes = &quot;刷新成功后 返回 Map &#123;jwt: jwt token, accessToken, refreshToken&#125; \n 成功后 在http header中添加 域: Authorization=jwt的值 &quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">        @ApiImplicitParam(name = &quot;token&quot;,  required = true, value = &quot;授权后 QQ的 或 微信的 或 微博的 refresh_token&quot;),</span></span><br><span class="line"><span class="meta">        @ApiImplicitParam(name = &quot;loginType&quot;, allowableValues = &quot;1,2,3&quot;, dataType = &quot;int&quot;, required = true, value = &quot;第三方登陆类型  1: QQ； 2: 微信； 3：微博&quot;),</span></span><br><span class="line"><span class="meta">        @ApiImplicitParam(name = &quot;phone&quot;, dataType = &quot;int&quot;, value = &quot;初次授权，需要绑定的 手机&quot;),</span></span><br><span class="line"><span class="meta">        @ApiImplicitParam(name = &quot;valid&quot;, dataType = &quot;int&quot;, value = &quot;初次授权，需要绑定的 手机校验码&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;ThirdLoginToken&gt; <span class="title function_">refresh</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam</span> String token,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam</span> <span class="type">int</span> loginType,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> String phone,</span></span><br><span class="line"><span class="params">            <span class="meta">@RequestParam(required = false)</span> String valid</span></span><br><span class="line"><span class="params">        )</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> thirdLogin(token, loginType, LOGIN_REFRESH.REFRESH.ordinal(), phone, valid);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/customer&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取用户信息&quot;, authorizations = &#123; @Authorization(value=&quot;apiKey&quot;) &#125;, response = CustomerEntity.class)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;CustomerEntity&gt; <span class="title function_">getCustomer</span><span class="params">()</span>&#123;</span><br><span class="line">        。。。</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(customer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绑定 qq, 微信，微博等</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PutMapping(value = &quot;/customer/third&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;绑定 qq, 微信，微博等 &quot;, response = ThirdLoginToken.class, authorizations = &#123; @Authorization(value=&quot;apiKey&quot;) &#125;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;token&quot;,  required = true, value = &quot;QQ授权后的access_token 或 微信的 authorization_code 或 微博的 authorization_code&quot;),</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;loginType&quot;, allowableValues = &quot;1,2,3&quot;, dataType = &quot;int&quot;, required = true, value = &quot;第三方登陆类型  1: QQ； 2: 微信； 3：微博&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseEntity <span class="title function_">updateCustomerThirdLogin</span><span class="params">(<span class="meta">@RequestParam</span> String token, <span class="meta">@RequestParam</span> <span class="type">int</span> loginType)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ThirdLoginToken</span> <span class="variable">loginToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThirdLoginToken</span>();</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(loginToken);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>entity</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 第三方登陆返回 VO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiModel</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">ThirdLoginToken</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;jwt token, 获取后 在http header中添加 域: Authorization=jwt的值&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String jwt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;第三方授权的 access token&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String accessToken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;第三方授权的 refresh token&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String refreshToken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;第三方授权的 openId&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String openId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ThirdLoginToken</span><span class="params">(String jwt, String accessToken, String refreshToken, String openId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.jwt = jwt;</span><br><span class="line">        <span class="built_in">this</span>.accessToken = accessToken;</span><br><span class="line">        <span class="built_in">this</span>.refreshToken = refreshToken;</span><br><span class="line">        <span class="built_in">this</span>.openId = openId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@Api:标志这个类为Swagger资源，根据config， 没标注的不会生成 swagger 的接口文档</p></li><li><p>@ApiImplicitParams，@ApiImplicitParam: 对参数进行说明, 其中dataType一定为小写； allowableValues 可限制 合法值得列表； required 指定该参数是否必须</p></li><li><p>@ApiOperation:描述了一种操作或通常针对特定的路径的HTTP方法。 response 指定返回值类型；authorizations 指定改接口的认证条件， apiKey 需要和 config的一致；</p></li><li><p>@ApiModel: 描述一个实体</p></li><li><p>@ApiModelProperty：描述一个字段</p></li></ul><blockquote><p><a href="https://github.com/swagger-api/swagger-core/wiki/Annotations-1.5.X">更多注解 官方说明</a></p></blockquote><h3 id="泛型返回值-response"><a href="#泛型返回值-response" class="headerlink" title="泛型返回值 response"></a>泛型返回值 response</h3><p><code>ComResultVo&lt;UserEntity&gt;</code> 这种带泛型的返回值，想要正常完全显示，需要注意如下：</p><ul><li><code>ComResultVo</code> 内需要正确的 <code>get/set</code> 方法</li><li>controller 返回值 <code>ComResultVo&lt;UserEntity&gt;</code> 一定要 标明泛型的具体值 <code>UserEntity</code></li></ul><p>达到如下效果<br><img src="/images/swagger_model.png"><br><img src="/images/swagger_model2.png"></p><h3 id="接口认证"><a href="#接口认证" class="headerlink" title="接口认证"></a>接口认证</h3><p><code>Authorize</code> 按钮， 填入合法的认证值，模拟授权。</p><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><p>打开 <a href="http://localhost:8080/swagger-ui.html#">http://localhost:8080/project_name&#x2F;swagger-ui.html</a> ,project_name表示你启动项目的名称,如果你以根目录启动则没有project_name,当你看到如下界面就表示配置成功了<br><img src="/images/swagger.png"></p><p>点开具体接口， 有惊喜 哈哈。<br><code>Try it out！</code> 可以实时测试接口</p><blockquote><p><a href="https://springfox.github.io/springfox/docs/snapshot/#getting-started">完整官方文档</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;主要内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;swagger&lt;/code&gt;(&lt;code&gt;springfox&lt;/code&gt;) 可帮助开发人员设计，构建，记录和使用RESTful Web服务, 使后台开发人员与移动端开发人员更好的对接.&lt;br&gt;大多数用户通过Swagger UI工具可很简单识别和使用Swagger。&lt;/p&gt;
&lt;p&gt;最大优点： 接口开发人员不用另外写接口文档，代码注释中写上swagger相关的注释就可以自动生成接口文档；&lt;br&gt;最大缺点： 对源代码侵入比较严重。&lt;/p&gt;
&lt;p&gt;本文以 &lt;code&gt;springfox-swagger2&lt;/code&gt; V2.9.2 版本为例说明。&lt;/p&gt;
&lt;p&gt;末了，还有个稍重量级竞品 &lt;a href=&quot;https://github.com/thx/rap2-delos&quot;&gt;RAP(阿里妈妈出品) &lt;/a&gt; ， 感兴趣的可以去玩玩。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新历史&lt;/em&gt;&lt;br&gt;+2018-11-04: 增加swagger注解具体说明&lt;/p&gt;</summary>
    
    
    
    <category term="spring" scheme="http://giveme5.cc/categories/spring/"/>
    
    
    <category term="spring" scheme="http://giveme5.cc/tags/spring/"/>
    
    <category term="springfox" scheme="http://giveme5.cc/tags/springfox/"/>
    
    <category term="swagger" scheme="http://giveme5.cc/tags/swagger/"/>
    
  </entry>
  
</feed>
